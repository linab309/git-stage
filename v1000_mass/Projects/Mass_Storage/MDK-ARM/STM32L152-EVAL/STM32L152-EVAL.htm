<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\STM32L152-EVAL\STM32L152-EVAL.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\STM32L152-EVAL\STM32L152-EVAL.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Tue May 12 11:14:30 2020
<BR><P>
<H3>Maximum Stack Usage =       5232 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
menu_home_display &rArr; save_the_interest_place &rArr; f_printf &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[14]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">BusFault_Handler</a><BR>
 <LI><a href="#[12]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">HardFault_Handler</a><BR>
 <LI><a href="#[13]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">MemManage_Handler</a><BR>
 <LI><a href="#[1fb]">putc_bfd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1fb]">putc_bfd</a><BR>
 <LI><a href="#[ed]">scan_directory_oldfile</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ed]">scan_directory_oldfile</a><BR>
 <LI><a href="#[195]">menu_keyprocess</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[195]">menu_keyprocess</a><BR>
 <LI><a href="#[15]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2c]">ADC1_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[14]">BusFault_Handler</a> from stm32_it.o(i.BusFault_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[30]">COMP_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[2f]">DAC_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[25]">DMA1_Channel1_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[26]">DMA1_Channel2_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[27]">DMA1_Channel3_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[28]">DMA1_Channel4_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[29]">DMA1_Channel5_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[2a]">DMA1_Channel6_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[2b]">DMA1_Channel7_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[17]">DebugMon_Handler</a> from stm32_it.o(i.DebugMon_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[0]">EP1_IN_Callback</a> from usb_endp.o(i.EP1_IN_Callback) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[2]">EP2_OUT_Callback</a> from usb_endp.o(i.EP2_OUT_Callback) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[20]">EXTI0_IRQHandler</a> from stm32_it.o(i.EXTI0_IRQHandler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[42]">EXTI15_10_IRQHandler</a> from stm32_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[21]">EXTI1_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[22]">EXTI2_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[23]">EXTI3_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[24]">EXTI4_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[31]">EXTI9_5_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[1e]">FLASH_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[4d]">Get_Max_Lun</a> from usb_prop.o(i.Get_Max_Lun) referenced from usb_prop.o(i.MASS_Data_Setup)
 <LI><a href="#[12]">HardFault_Handler</a> from stm32_it.o(i.HardFault_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[3a]">I2C1_ER_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[39]">I2C1_EV_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[3c]">I2C2_ER_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[3b]">I2C2_EV_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[32]">LCD_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[7]">MASS_Data_Setup</a> from usb_prop.o(i.MASS_Data_Setup) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[b]">MASS_GetConfigDescriptor</a> from usb_prop.o(i.MASS_GetConfigDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[a]">MASS_GetDeviceDescriptor</a> from usb_prop.o(i.MASS_GetDeviceDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[c]">MASS_GetStringDescriptor</a> from usb_prop.o(i.MASS_GetStringDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[9]">MASS_Get_Interface_Setting</a> from usb_prop.o(i.MASS_Get_Interface_Setting) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[8]">MASS_NoData_Setup</a> from usb_prop.o(i.MASS_NoData_Setup) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[4]">MASS_Reset</a> from usb_prop.o(i.MASS_Reset) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[5]">MASS_Status_In</a> from usb_prop.o(i.MASS_Status_In) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[6]">MASS_Status_Out</a> from usb_prop.o(i.MASS_Status_Out) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[3]">MASS_init</a> from usb_prop.o(i.MASS_init) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[e]">Mass_Storage_ClearFeature</a> from usb_prop.o(i.Mass_Storage_ClearFeature) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[d]">Mass_Storage_SetConfiguration</a> from usb_prop.o(i.Mass_Storage_SetConfiguration) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[f]">Mass_Storage_SetDeviceAddress</a> from usb_prop.o(i.Mass_Storage_SetDeviceAddress) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[13]">MemManage_Handler</a> from stm32_it.o(i.MemManage_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[11]">NMI_Handler</a> from stm32_it.o(i.NMI_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[1]">NOP_Process</a> from usb_core.o(i.NOP_Process) referenced 36 times from usb_istr.o(.data)
 <LI><a href="#[1b]">PVD_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[18]">PendSV_Handler</a> from stm32_it.o(i.PendSV_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[1f]">RCC_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[43]">RTC_Alarm_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[1d]">RTC_WKUP_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[10]">Reset_Handler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[3d]">SPI1_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[3e]">SPI2_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[16]">SVC_Handler</a> from stm32_it.o(i.SVC_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[4b]">Standard_GetConfiguration</a> from usb_core.o(i.Standard_GetConfiguration) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[4c]">Standard_GetInterface</a> from usb_core.o(i.Standard_GetInterface) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[4a]">Standard_GetStatus</a> from usb_core.o(i.Standard_GetStatus) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[19]">SysTick_Handler</a> from stm32_it.o(i.SysTick_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[48]">SystemInit</a> from system_stm32l1xx.o(i.SystemInit) referenced from startup_stm32l1xx_md.o(.text)
 <LI><a href="#[1c]">TAMPER_STAMP_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[34]">TIM10_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[35]">TIM11_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[36]">TIM2_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[37]">TIM3_IRQHandler</a> from timer.o(i.TIM3_IRQHandler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[38]">TIM4_IRQHandler</a> from usart2.o(i.TIM4_IRQHandler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[45]">TIM6_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[46]">TIM7_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[33]">TIM9_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[3f]">USART1_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[40]">USART2_IRQHandler</a> from usart2.o(i.USART2_IRQHandler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[41]">USART3_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[44]">USB_FS_WKUP_IRQHandler</a> from stm32_it.o(i.USB_FS_WKUP_IRQHandler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[2d]">USB_HP_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[2e]">USB_LP_IRQHandler</a> from stm32_it.o(i.USB_LP_IRQHandler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[15]">UsageFault_Handler</a> from stm32_it.o(i.UsageFault_Handler) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[1a]">WWDG_IRQHandler</a> from startup_stm32l1xx_md.o(.text) referenced from startup_stm32l1xx_md.o(RESET)
 <LI><a href="#[49]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l1xx_md.o(.text)
 <LI><a href="#[4f]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[50]">delay_ms</a> from delay.o(i.delay_ms) referenced from bmp085.o(i.bmp_moudle_preinit)
 <LI><a href="#[4e]">fputc</a> from usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[51]">i2c_reg_read</a> from bmp085.o(i.i2c_reg_read) referenced from bmp085.o(i.bmp_moudle_preinit)
 <LI><a href="#[52]">i2c_reg_write</a> from bmp085.o(i.i2c_reg_write) referenced from bmp085.o(i.bmp_moudle_preinit)
 <LI><a href="#[47]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[5a]">menu_3D_display</a> from menutal.o(i.menu_3D_display) referenced from menutal.o(.constdata)
 <LI><a href="#[57]">menu_Pressure_display</a> from menutal.o(i.menu_Pressure_display) referenced from menutal.o(.constdata)
 <LI><a href="#[58]">menu_arruite_change_display</a> from menutal.o(i.menu_arruite_change_display) referenced from menutal.o(.constdata)
 <LI><a href="#[5d]">menu_chaoxi_display</a> from menutal.o(i.menu_chaoxi_display) referenced from menutal.o(.constdata)
 <LI><a href="#[5e]">menu_display_setting</a> from menutal.o(i.menu_display_setting) referenced from menutal.o(.constdata)
 <LI><a href="#[5c]">menu_guiji_display</a> from menutal.o(i.menu_guiji_display) referenced from menutal.o(.constdata)
 <LI><a href="#[5b]">menu_home_display</a> from menutal.o(i.menu_home_display) referenced from menutal.o(.constdata)
 <LI><a href="#[53]">menu_main_display</a> from menutal.o(i.menu_main_display) referenced from menutal.o(.constdata)
 <LI><a href="#[55]">menu_real_crood_display</a> from menutal.o(i.menu_real_crood_display) referenced from menutal.o(.constdata)
 <LI><a href="#[54]">menu_real_speed_display</a> from menutal.o(i.menu_real_speed_display) referenced from menutal.o(.constdata)
 <LI><a href="#[59]">menu_speed_change_display</a> from menutal.o(i.menu_speed_change_display) referenced from menutal.o(.constdata)
 <LI><a href="#[56]">menu_temp_change_display</a> from menutal.o(i.menu_temp_change_display) referenced from menutal.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[49]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(.text)
</UL>
<P><STRONG><a name="[24e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[24f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[250]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[251]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[252]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[253]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[10]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[243]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_guiji_message
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_sl_number
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_get_process
</UL>

<P><STRONG><a name="[254]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[255]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[ec]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_oldfile_nospace
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_allgujifile
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_secpage_control
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
</UL>

<P><STRONG><a name="[257]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[134]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPVTG_Analysis
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSV_Analysis
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSA_Analysis
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGGA_Analysis
</UL>

<P><STRONG><a name="[244]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frac
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_Analysis
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[1ff]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
</UL>

<P><STRONG><a name="[258]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frac
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rev180
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;revolution
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rev180
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085Convert
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rad
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;revolution
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rev180
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085Convert
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rad
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1a8]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[259]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frac
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_Analysis
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085Convert
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frac
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
</UL>

<P><STRONG><a name="[138]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085Convert
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rad
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipart
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frac
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;revolution
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rev180
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_Analysis
</UL>

<P><STRONG><a name="[25a]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[1af]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rad
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipart
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frac
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;revolution
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rev180
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
</UL>

<P><STRONG><a name="[20d]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
</UL>

<P><STRONG><a name="[25b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1b2]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[25c]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[25d]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[25e]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[65]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[6e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6d]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[7c]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[60]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[260]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[262]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>ADC_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l1xx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[7f]"></a>ADC_Config</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, myadc.o(i.ADC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ADC_Config &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PowerDownCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DelaySelectionConfig
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSICmd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
</UL>

<P><STRONG><a name="[87]"></a>ADC_DelaySelectionConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l1xx_adc.o(i.ADC_DelaySelectionConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[24d]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vddmv_adc_proess
</UL>

<P><STRONG><a name="[8b]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l1xx_adc.o(i.ADC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[85]"></a>ADC_Init</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32l1xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[88]"></a>ADC_PowerDownCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l1xx_adc.o(i.ADC_PowerDownCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[86]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, stm32l1xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[8c]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_adc.o(i.ADC_SoftwareStartConv))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[84]"></a>ADC_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l1xx_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[8d]"></a>Auto_Time_Set</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, rtc.o(i.Auto_Time_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Auto_Time_Set &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_cmpx
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
</UL>

<P><STRONG><a name="[90]"></a>BMP085_Get_Altitude</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bmp085.o(i.BMP085_Get_Altitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = BMP085_Get_Altitude &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvAltitude
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
</UL>

<P><STRONG><a name="[95]"></a>BMP085_RecvACK</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bmp085.o(i.BMP085_RecvACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BMP085_RecvACK &rArr; SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendByte
</UL>

<P><STRONG><a name="[98]"></a>BMP085_SendACK</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bmp085.o(i.BMP085_SendACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BMP085_SendACK &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
</UL>

<P><STRONG><a name="[9a]"></a>BMP085_SendByte</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bmp085.o(i.BMP085_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_RecvACK
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadTemp
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadPressure
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Write
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
</UL>

<P><STRONG><a name="[9c]"></a>BMP085_get_process</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, bmp085.o(i.BMP085_get_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = BMP085_get_process &rArr; ConvAltitude &rArr; BMP085_Get_Altitude &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvAltitude
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_pressure_tempreature
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085Convert
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
</UL>

<P><STRONG><a name="[a1]"></a>Bot_Abort</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usb_bot.o(i.Bot_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bot_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Verify10_Cmd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Invalid_Cmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_ClearFeature
</UL>

<P><STRONG><a name="[14]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>Button_key_perss</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, pwm.o(i.Button_key_perss))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Button_key_perss &rArr; PWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[18a]"></a>ByteSwap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_regs.o(i.ByteSwap))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[aa]"></a>CBW_Decode</STRONG> (Thumb, 392 bytes, Stack size 16 bytes, usb_bot.o(i.CBW_Decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4272<LI>Call Chain = CBW_Decode &rArr; SCSI_Write10_Cmd &rArr; Write_Memory &rArr; MAL_Write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Verify10_Cmd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Start_Stop_Unit_Cmd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_RequestSense_Cmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ModeSense6_Cmd
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ModeSense10_Cmd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Invalid_Cmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Inquiry_Cmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
</UL>

<P><STRONG><a name="[ba]"></a>CTR_LP</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, usb_int.o(i.CTR_LP))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[be]"></a>Choose_power_mode</STRONG> (Thumb, 608 bytes, Stack size 88 bytes, sys.o(i.Choose_power_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4888<LI>Call Chain = Choose_power_mode &rArr; is_recoreding &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WAKEUP
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Leave_LowPowerMode
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enter_LowPowerMode
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_On
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_power_ctrl
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_recoreding
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_WakeUpPinCmd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_VoltageScalingConfig
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_UltraLowPowerCmd
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_PVDCmd
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_GetFlagStatus
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_EnterSTANDBYMode
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_EnterLowPowerRunMode
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_ClearFlag
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SLEEPPowerDownCmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_PowerDown
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_Off
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_GPIO_Config
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_LowPower_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_RCC
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_down_process
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIDDrunmV
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerlow_proess
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_timer_1s
</UL>

<P><STRONG><a name="[118]"></a>ClearDTOG_RX</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_RX))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_SetConfiguration
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_NoData_Setup
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[117]"></a>ClearDTOG_TX</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_TX))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_SetConfiguration
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_NoData_Setup
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[11e]"></a>Clear_Status_Out</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_regs.o(i.Clear_Status_Out))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[d7]"></a>Config_RCC</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, sys.o(i.Config_RCC))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Config_RCC
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[a0]"></a>ConvAltitude</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, bmp085.o(i.ConvAltitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ConvAltitude &rArr; BMP085_Get_Altitude &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_get_process
</UL>

<P><STRONG><a name="[e0]"></a>DATA_EEPROM_EraseWord</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32l1xx_flash.o(i.DATA_EEPROM_EraseWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DATA_EEPROM_EraseWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_EraseWord_Eeprom
</UL>

<P><STRONG><a name="[e2]"></a>DATA_EEPROM_ProgramWord</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, stm32l1xx_flash.o(i.DATA_EEPROM_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DATA_EEPROM_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
</UL>

<P><STRONG><a name="[247]"></a>DATA_EEPROM_Unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.DATA_EEPROM_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_EraseWord_Eeprom
</UL>

<P><STRONG><a name="[17]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>Del_allgujifile</STRONG> (Thumb, 86 bytes, Stack size 152 bytes, main.o(i.Del_allgujifile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4696<LI>Call Chain = Del_allgujifile &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
</UL>

<P><STRONG><a name="[ef]"></a>Del_oldfile_nospace</STRONG> (Thumb, 126 bytes, Stack size 152 bytes, main.o(i.Del_oldfile_nospace))
<BR><BR>[Stack]<UL><LI>Max Depth = 4696<LI>Call Chain = Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[f1]"></a>DisplayIDDrunmV</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, myadc.o(i.DisplayIDDrunmV))
<BR><BR>[Stack]<UL><LI>Max Depth = 4904<LI>Call Chain = DisplayIDDrunmV &rArr; Choose_power_mode &rArr; is_recoreding &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vddmv_adc_proess
</UL>

<P><STRONG><a name="[0]"></a>EP1_IN_Callback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_endp.o(i.EP1_IN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EP1_IN_Callback &rArr; Mass_Storage_In &rArr; SCSI_Read10_Cmd &rArr; Read_Memory &rArr; MAL_Read &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>EP2_OUT_Callback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_endp.o(i.EP2_OUT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4288<LI>Call Chain = EP2_OUT_Callback &rArr; Mass_Storage_Out &rArr; CBW_Decode &rArr; SCSI_Write10_Cmd &rArr; Write_Memory &rArr; MAL_Write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32_it.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[f5]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FS_WKUP_IRQHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[f4]"></a>EXTI_GetITStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32l1xx_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[10d]"></a>EXTI_Init</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, stm32l1xx_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[ce]"></a>Enter_LowPowerMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hw_config.o(i.Enter_LowPowerMode))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[248]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_EraseWord_Eeprom
</UL>

<P><STRONG><a name="[f6]"></a>FLASH_GetStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[17c]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[17b]"></a>FLASH_ReadAccess64Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_ReadAccess64Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[c3]"></a>FLASH_SLEEPPowerDownCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_SLEEPPowerDownCmd))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
</UL>

<P><STRONG><a name="[17d]"></a>FLASH_SetLatency</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[e1]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32l1xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATA_EEPROM_ProgramWord
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATA_EEPROM_EraseWord
</UL>

<P><STRONG><a name="[82]"></a>GPIO_Init</STRONG> (Thumb, 158 bytes, Stack size 20 bytes, stm32l1xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_power_ctrl
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_LowPower_Config
</UL>

<P><STRONG><a name="[d6]"></a>GPIO_LowPower_Config</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, sys.o(i.GPIO_LowPower_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GPIO_LowPower_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[10b]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32l1xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[111]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l1xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[103]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l1xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[f7]"></a>GPS_Analysis</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gps.o(i.GPS_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GPS_Analysis &rArr; NMEA_GPGSV_Analysis &rArr; NMEA_Str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPVTG_Analysis
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSV_Analysis
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSA_Analysis
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGGA_Analysis
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_receiver
</UL>

<P><STRONG><a name="[d3]"></a>GPS_power_ctrl</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, sys.o(i.GPS_power_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPS_power_ctrl &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_secpage_control
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_to_runmode_recoder
</UL>

<P><STRONG><a name="[e8]"></a>GetEPRxAddr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>

<P><STRONG><a name="[1a3]"></a>GetEPRxCount</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxCount))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[124]"></a>GetEPRxStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxStatus))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
</UL>

<P><STRONG><a name="[e4]"></a>GetEPTxAddr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPTxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[fd]"></a>GetSunMoonTime</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, gongshi.o(i.GetSunMoonTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = GetSunMoonTime &rArr; find_moonrise_set &rArr; sin_alt &rArr; minimoon &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
</UL>

<P><STRONG><a name="[4d]"></a>Get_Max_Lun</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_prop.o(i.Get_Max_Lun))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Data_Setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.MASS_Data_Setup)
</UL>
<P><STRONG><a name="[100]"></a>Get_SerialNum</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hw_config.o(i.Get_SerialNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_init
</UL>

<P><STRONG><a name="[12]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32_it.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = HardFault_Handler &rArr;  HardFault_Handler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>IIC_Init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, myiic.o(i.IIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IIC_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[104]"></a>IIC_Read_Byte</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, myiic.o(i.IIC_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IIC_Read_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
</UL>

<P><STRONG><a name="[9b]"></a>IIC_Send_Byte</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, myiic.o(i.IIC_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendByte
</UL>

<P><STRONG><a name="[105]"></a>IIC_Start</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, myiic.o(i.IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IIC_Start &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadTemp
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadPressure
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Write
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
</UL>

<P><STRONG><a name="[106]"></a>IIC_Stop</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, myiic.o(i.IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadTemp
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadPressure
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Write
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
</UL>

<P><STRONG><a name="[bb]"></a>In0_Process</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, usb_core.o(i.In0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = In0_Process &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[109]"></a>Init_BMP085</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, bmp085.o(i.Init_BMP085))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Init_BMP085 &rArr; Multiple_read &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
</UL>

<P><STRONG><a name="[153]"></a>Is_Leap_Year</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtc.o(i.Is_Leap_Year))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
</UL>

<P><STRONG><a name="[110]"></a>JTAG_Set</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys.o(i.JTAG_Set))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
</UL>

<P><STRONG><a name="[d8]"></a>KEY_Init</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, key.o(i.KEY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = KEY_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10f]"></a>KEY_Scan</STRONG> (Thumb, 450 bytes, Stack size 24 bytes, key.o(i.KEY_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = KEY_Scan &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JTAG_Set
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
</UL>

<P><STRONG><a name="[de]"></a>LED_Init</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LED_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[db]"></a>Leave_LowPowerMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hw_config.o(i.Leave_LowPowerMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Leave_LowPowerMode &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume_Init
</UL>

<P><STRONG><a name="[16f]"></a>MAL_GetStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mass_mal.o(i.MAL_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
</UL>

<P><STRONG><a name="[188]"></a>MAL_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mass_mal.o(i.MAL_Init))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[112]"></a>MAL_Read</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mass_mal.o(i.MAL_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MAL_Read &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
</UL>

<P><STRONG><a name="[114]"></a>MAL_Write</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mass_mal.o(i.MAL_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4208<LI>Call Chain = MAL_Write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Memory
</UL>

<P><STRONG><a name="[7]"></a>MASS_Data_Setup</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, usb_prop.o(i.MASS_Data_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MASS_Data_Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Max_Lun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>MASS_GetConfigDescriptor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_GetConfigDescriptor))
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>MASS_GetDeviceDescriptor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_GetDeviceDescriptor))
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>MASS_GetStringDescriptor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_GetStringDescriptor))
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>MASS_Get_Interface_Setting</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_Get_Interface_Setting))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>MASS_NoData_Setup</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, usb_prop.o(i.MASS_NoData_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MASS_NoData_Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>MASS_Reset</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, usb_prop.o(i.MASS_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MASS_Reset &rArr; SetDeviceAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPType
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxAddr
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxValid
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxAddr
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBTABLE
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Status_Out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>MASS_Status_In</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_Status_In))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>MASS_Status_Out</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.MASS_Status_Out))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>MASS_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usb_prop.o(i.MASS_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MASS_init &rArr; Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[122]"></a>MY_NVIC_Init</STRONG> (Thumb, 112 bytes, Stack size 28 bytes, sys.o(i.MY_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
</UL>

<P><STRONG><a name="[123]"></a>MY_NVIC_PriorityGroupConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sys.o(i.MY_NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>

<P><STRONG><a name="[e]"></a>Mass_Storage_ClearFeature</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_prop.o(i.Mass_Storage_ClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mass_Storage_ClearFeature &rArr; Bot_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[f2]"></a>Mass_Storage_In</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, usb_bot.o(i.Mass_Storage_In))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Mass_Storage_In &rArr; SCSI_Read10_Cmd &rArr; Read_Memory &rArr; MAL_Read &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxStatus
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[f3]"></a>Mass_Storage_Out</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, usb_bot.o(i.Mass_Storage_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 4288<LI>Call Chain = Mass_Storage_Out &rArr; CBW_Decode &rArr; SCSI_Write10_Cmd &rArr; Write_Memory &rArr; MAL_Write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP2_OUT_Callback
</UL>

<P><STRONG><a name="[d]"></a>Mass_Storage_SetConfiguration</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usb_prop.o(i.Mass_Storage_SetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mass_Storage_SetConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>Mass_Storage_SetDeviceAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_prop.o(i.Mass_Storage_SetDeviceAddress))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[23d]"></a>Max_arry</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, menutal.o(i.Max_arry))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_pass
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_s
</UL>

<P><STRONG><a name="[23f]"></a>Max_arry32</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, menutal.o(i.Max_arry32))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_pass
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_s
</UL>

<P><STRONG><a name="[13]"></a>MemManage_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32_it.o(i.MemManage_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = MemManage_Handler &rArr;  MemManage_Handler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[23e]"></a>Min_arry</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, menutal.o(i.Min_arry))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_pass
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_s
</UL>

<P><STRONG><a name="[240]"></a>Min_arry32</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, menutal.o(i.Min_arry32))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_pass
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_s
</UL>

<P><STRONG><a name="[126]"></a>Movie_Show_Img</STRONG> (Thumb, 130 bytes, Stack size 52 bytes, oled.o(i.Movie_Show_Img))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Movie_Show_Img &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_down_process
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_the_fanxiang
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_org
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_mainpage
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_gujiword
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_gujIcon_Status
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_gujIcon
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_enter_flash
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_3D_display
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_update_process
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en_input
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lower2_type
</UL>

<P><STRONG><a name="[128]"></a>Movie_Show_Img_3</STRONG> (Thumb, 116 bytes, Stack size 44 bytes, oled.o(i.Movie_Show_Img_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Movie_Show_Img_3 &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_sl_number
</UL>

<P><STRONG><a name="[129]"></a>Movie_Show_Img_force1616</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, oled.o(i.Movie_Show_Img_force1616))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Movie_Show_Img_force1616 &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[10a]"></a>Multiple_read</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bmp085.o(i.Multiple_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Multiple_read &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendByte
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendACK
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadTemp
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadPressure
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BMP085
</UL>

<P><STRONG><a name="[12a]"></a>My_RTC_Init</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, rtc.o(i.My_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = My_RTC_Init &rArr; Auto_Time_Set &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_RTCAccessCmd
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DateShow
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Time_Set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearFlag
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[135]"></a>NMEA_Comma_Pos</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gps.o(i.NMEA_Comma_Pos))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPVTG_Analysis
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSV_Analysis
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSA_Analysis
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGGA_Analysis
</UL>

<P><STRONG><a name="[f9]"></a>NMEA_GPGGA_Analysis</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gps.o(i.NMEA_GPGGA_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NMEA_GPGGA_Analysis &rArr; NMEA_Str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Analysis
</UL>

<P><STRONG><a name="[fa]"></a>NMEA_GPGSA_Analysis</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gps.o(i.NMEA_GPGSA_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = NMEA_GPGSA_Analysis &rArr; NMEA_Str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Analysis
</UL>

<P><STRONG><a name="[f8]"></a>NMEA_GPGSV_Analysis</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, gps.o(i.NMEA_GPGSV_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NMEA_GPGSV_Analysis &rArr; NMEA_Str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Analysis
</UL>

<P><STRONG><a name="[fb]"></a>NMEA_GPRMC_Analysis</STRONG> (Thumb, 460 bytes, Stack size 32 bytes, gps.o(i.NMEA_GPRMC_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = NMEA_GPRMC_Analysis &rArr; NMEA_Str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Pow
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Analysis
</UL>

<P><STRONG><a name="[fc]"></a>NMEA_GPVTG_Analysis</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gps.o(i.NMEA_GPVTG_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NMEA_GPVTG_Analysis &rArr; NMEA_Str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Pow
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Analysis
</UL>

<P><STRONG><a name="[137]"></a>NMEA_Pow</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gps.o(i.NMEA_Pow))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPVTG_Analysis
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[136]"></a>NMEA_Str2num</STRONG> (Thumb, 194 bytes, Stack size 36 bytes, gps.o(i.NMEA_Str2num))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = NMEA_Str2num
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPVTG_Analysis
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSV_Analysis
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSA_Analysis
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGGA_Analysis
</UL>

<P><STRONG><a name="[11]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NOP_Process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_core.o(i.NOP_Process))
<BR>[Address Reference Count : 3]<UL><LI> usb_istr.o(.data)
<LI> usb_istr.o(.data)
<LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[10e]"></a>NVIC_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config_disable
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[1a1]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config_disable
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[18b]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
</UL>

<P><STRONG><a name="[13f]"></a>OLED_Clear</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, oled.o(i.OLED_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OLED_Clear &rArr; OLED_Refresh_Gram
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString_head
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString_24
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_down_process
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_when_user_press_key_type
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lower2_type
</UL>

<P><STRONG><a name="[d4]"></a>OLED_Display_Off</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, oled.o(i.OLED_Display_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OLED_Display_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[cd]"></a>OLED_Display_On</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, oled.o(i.OLED_Display_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OLED_Display_On
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[127]"></a>OLED_DrawPoint</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, oled.o(i.OLED_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine_visual
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img_force1616
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img_3
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
</UL>

<P><STRONG><a name="[142]"></a>OLED_DrawVLine</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, oled.o(i.OLED_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OLED_DrawVLine &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
</UL>

<P><STRONG><a name="[143]"></a>OLED_DrawVLine_visual</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, oled.o(i.OLED_DrawVLine_visual))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OLED_DrawVLine_visual &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
</UL>

<P><STRONG><a name="[144]"></a>OLED_Fill</STRONG> (Thumb, 52 bytes, Stack size 28 bytes, oled.o(i.OLED_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OLED_Fill &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_the_fanxiang
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_mainpage_control
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_enter_flash
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_setting
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_3D_display
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lower2_type
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerlow_proess
</UL>

<P><STRONG><a name="[d0]"></a>OLED_Init</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, oled.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OLED_Init &rArr; OLED_Clear &rArr; OLED_Refresh_Gram
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JTAG_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[140]"></a>OLED_Refresh_Gram</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, oled.o(i.OLED_Refresh_Gram))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OLED_Refresh_Gram
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_down_process
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_enter_flash
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lower2_type
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerlow_proess
</UL>

<P><STRONG><a name="[145]"></a>OLED_Refresh_Gram_low</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, oled.o(i.OLED_Refresh_Gram_low))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OLED_Refresh_Gram_low
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[146]"></a>OLED_ShowChar</STRONG> (Thumb, 182 bytes, Stack size 36 bytes, oled.o(i.OLED_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString_head
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString_24
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
</UL>

<P><STRONG><a name="[147]"></a>OLED_ShowString</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, oled.o(i.OLED_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_org
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_mainpage
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_gujiword
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_3D_display
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en_input
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
</UL>

<P><STRONG><a name="[148]"></a>OLED_ShowString12</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, oled.o(i.OLED_ShowString12))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OLED_ShowString12 &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_mainpage
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_update_process
</UL>

<P><STRONG><a name="[149]"></a>OLED_ShowString_24</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, oled.o(i.OLED_ShowString_24))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OLED_ShowString_24 &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
</UL>

<P><STRONG><a name="[14a]"></a>OLED_ShowString_head</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, oled.o(i.OLED_ShowString_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OLED_ShowString_head &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
</UL>

<P><STRONG><a name="[141]"></a>OLED_WR_Byte</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, oled.o(i.OLED_WR_Byte))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram_low
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_On
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_Off
</UL>

<P><STRONG><a name="[bd]"></a>Out0_Process</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, usb_core.o(i.Out0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Out0_Process &rArr; DataStageOut
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[e9]"></a>PMAToUserBufferCopy</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_mem.o(i.PMAToUserBufferCopy))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>

<P><STRONG><a name="[a8]"></a>PWM_Init</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, pwm.o(i.PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = PWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
</UL>

<P><STRONG><a name="[c4]"></a>PWR_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l1xx_pwr.o(i.PWR_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[bf]"></a>PWR_EnterLowPowerRunMode</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32l1xx_pwr.o(i.PWR_EnterLowPowerRunMode))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[da]"></a>PWR_EnterSTANDBYMode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l1xx_pwr.o(i.PWR_EnterSTANDBYMode))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[c0]"></a>PWR_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l1xx_pwr.o(i.PWR_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
</UL>

<P><STRONG><a name="[c5]"></a>PWR_PVDCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_pwr.o(i.PWR_PVDCmd))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[12f]"></a>PWR_RTCAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_pwr.o(i.PWR_RTCAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[c2]"></a>PWR_UltraLowPowerCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_pwr.o(i.PWR_UltraLowPowerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[c1]"></a>PWR_VoltageScalingConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l1xx_pwr.o(i.PWR_VoltageScalingConfig))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
</UL>

<P><STRONG><a name="[d9]"></a>PWR_WakeUpPinCmd</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32l1xx_pwr.o(i.PWR_WakeUpPinCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWR_WakeUpPinCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[18]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[108]"></a>Post0_Process</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usb_core.o(i.Post0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Post0_Process
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[120]"></a>PowerOn</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usb_pwr.o(i.PowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PowerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Cable_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_init
</UL>

<P><STRONG><a name="[81]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_power_ctrl
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
</UL>

<P><STRONG><a name="[a5]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
</UL>

<P><STRONG><a name="[83]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
</UL>

<P><STRONG><a name="[183]"></a>RCC_DeInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
</UL>

<P><STRONG><a name="[19f]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, stm32l1xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[12e]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[17f]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[180]"></a>RCC_HCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[185]"></a>RCC_HSEConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
</UL>

<P><STRONG><a name="[80]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_HSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[14e]"></a>RCC_LSEConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[186]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_LSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
</UL>

<P><STRONG><a name="[184]"></a>RCC_MSIRangeConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_MSIRangeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
</UL>

<P><STRONG><a name="[182]"></a>RCC_PCLK1Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[181]"></a>RCC_PCLK2Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[150]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[14f]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[17e]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLKToMSI
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSICLK
</UL>

<P><STRONG><a name="[131]"></a>RTC_ClearFlag</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l1xx_rtc.o(i.RTC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
</UL>

<P><STRONG><a name="[c6]"></a>RTC_Config</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, rtc.o(i.RTC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Config &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_RTCAccessCmd
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[133]"></a>RTC_DateShow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtc.o(i.RTC_DateShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_DateShow &rArr; RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[156]"></a>RTC_EnterInitMode</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32l1xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[157]"></a>RTC_ExitInitMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l1xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[152]"></a>RTC_Get</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, rtc.o(i.RTC_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Get &rArr; RTC_Get_Week
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Leap_Year
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
</UL>

<P><STRONG><a name="[151]"></a>RTC_GetDate</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32l1xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DateShow
</UL>

<P><STRONG><a name="[155]"></a>RTC_GetTime</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32l1xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
</UL>

<P><STRONG><a name="[8f]"></a>RTC_Get_Week</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, rtc.o(i.RTC_Get_Week))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_Get_Week
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_set
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Time_Set
</UL>

<P><STRONG><a name="[12c]"></a>RTC_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32l1xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
</UL>

<P><STRONG><a name="[12b]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32l1xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[158]"></a>RTC_SetDate</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32l1xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[15a]"></a>RTC_SetTime</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, stm32l1xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[12d]"></a>RTC_TimeRegulate</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rtc.o(i.RTC_TimeRegulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RTC_TimeRegulate &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DateShow
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_set
</UL>

<P><STRONG><a name="[132]"></a>RTC_TimeShow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtc.o(i.RTC_TimeShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_TimeShow &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[130]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32l1xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[15b]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32l1xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[15c]"></a>Read_Memory</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, memory.o(i.Read_Memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read_Memory &rArr; MAL_Read &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
</UL>

<P><STRONG><a name="[15e]"></a>Recording_guji</STRONG> (Thumb, 596 bytes, Stack size 88 bytes, menutal.o(i.Recording_guji))
<BR><BR>[Stack]<UL><LI>Max Depth = 4800<LI>Call Chain = Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_append
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_guiji_message
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpx_filehead_write
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_porcess
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_secpage_control
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_recoreding
</UL>

<P><STRONG><a name="[dd]"></a>Restore_GPIO_Config</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, sys.o(i.Restore_GPIO_Config))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[16c]"></a>Resume</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, usb_pwr.o(i.Resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Resume &rArr; Resume_Init &rArr; Leave_LowPowerMode &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[16d]"></a>Resume_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_pwr.o(i.Resume_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Resume_Init &rArr; Leave_LowPowerMode &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Leave_LowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume
</UL>

<P><STRONG><a name="[16e]"></a>SCSI_Address_Management</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, usb_scsi.o(i.SCSI_Address_Management))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SCSI_Address_Management &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
</UL>

<P><STRONG><a name="[b8]"></a>SCSI_Format_Cmd</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_Format_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SCSI_Format_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[ae]"></a>SCSI_Inquiry_Cmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_scsi.o(i.SCSI_Inquiry_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCSI_Inquiry_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b9]"></a>SCSI_Invalid_Cmd</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_Invalid_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SCSI_Invalid_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b1]"></a>SCSI_ModeSense10_Cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_scsi.o(i.SCSI_ModeSense10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCSI_ModeSense10_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b0]"></a>SCSI_ModeSense6_Cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_scsi.o(i.SCSI_ModeSense6_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCSI_ModeSense6_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b5]"></a>SCSI_Read10_Cmd</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, usb_scsi.o(i.SCSI_Read10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SCSI_Read10_Cmd &rArr; Read_Memory &rArr; MAL_Read &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b3]"></a>SCSI_ReadCapacity10_Cmd</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_ReadCapacity10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SCSI_ReadCapacity10_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b2]"></a>SCSI_ReadFormatCapacity_Cmd</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_ReadFormatCapacity_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SCSI_ReadFormatCapacity_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[ad]"></a>SCSI_RequestSense_Cmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_scsi.o(i.SCSI_RequestSense_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCSI_RequestSense_Cmd &rArr; Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[af]"></a>SCSI_Start_Stop_Unit_Cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_scsi.o(i.SCSI_Start_Stop_Unit_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCSI_Start_Stop_Unit_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b4]"></a>SCSI_TestUnitReady_Cmd</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_TestUnitReady_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SCSI_TestUnitReady_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b7]"></a>SCSI_Verify10_Cmd</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_scsi.o(i.SCSI_Verify10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SCSI_Verify10_Cmd &rArr; Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[b6]"></a>SCSI_Write10_Cmd</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, usb_scsi.o(i.SCSI_Write10_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4256<LI>Call Chain = SCSI_Write10_Cmd &rArr; Write_Memory &rArr; MAL_Write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Scsi_Sense_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Memory
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
</UL>

<P><STRONG><a name="[96]"></a>SDA_IN</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, myiic.o(i.SDA_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_RecvACK
</UL>

<P><STRONG><a name="[99]"></a>SDA_OUT</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, myiic.o(i.SDA_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendACK
</UL>

<P><STRONG><a name="[172]"></a>SPI_FLASH_Write_Enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash.o(i.SPI_FLASH_Write_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_FLASH_Write_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
</UL>

<P><STRONG><a name="[174]"></a>SPI_Flash_Erase_Sector</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, flash.o(i.SPI_Flash_Erase_Sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Flash_Erase_Sector &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
</UL>

<P><STRONG><a name="[cc]"></a>SPI_Flash_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash.o(i.SPI_Flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPI_Flash_Init &rArr; SPIx_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
</UL>

<P><STRONG><a name="[d5]"></a>SPI_Flash_PowerDown</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_PowerDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_PowerDown
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[113]"></a>SPI_Flash_Read</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_pass
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[177]"></a>SPI_Flash_ReadSR</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_ReadSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>

<P><STRONG><a name="[df]"></a>SPI_Flash_WAKEUP</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_WAKEUP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_WAKEUP
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[175]"></a>SPI_Flash_Wait_Busy</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_Wait_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
</UL>

<P><STRONG><a name="[115]"></a>SPI_Flash_Write</STRONG> (Thumb, 162 bytes, Stack size 4136 bytes, flash.o(i.SPI_Flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4200<LI>Call Chain = SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Write
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_s
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[178]"></a>SPI_Flash_Write_NoCheck</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
</UL>

<P><STRONG><a name="[179]"></a>SPI_Flash_Write_Page</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Write_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>

<P><STRONG><a name="[176]"></a>SPIx_Init</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, spi.o(i.SPIx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPIx_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[173]"></a>SPIx_ReadWriteByte</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, spi.o(i.SPIx_ReadWriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WAKEUP
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_PowerDown
</UL>

<P><STRONG><a name="[215]"></a>SPIx_SetSpeed</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, spi.o(i.SPIx_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[10c]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l1xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
</UL>

<P><STRONG><a name="[1a0]"></a>SYSCFG_USBPuCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l1xx_syscfg.o(i.SYSCFG_USBPuCmd))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Cable_Config
</UL>

<P><STRONG><a name="[17a]"></a>Send_to_goto_lowpower</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, menutal.o(i.Send_to_goto_lowpower))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Send_to_goto_lowpower &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[119]"></a>SetBTABLE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_regs.o(i.SetBTABLE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[107]"></a>SetDeviceAddress</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, usb_core.o(i.SetDeviceAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[11b]"></a>SetEPRxAddr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPRxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[11c]"></a>SetEPRxCount</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPRxCount))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
</UL>

<P><STRONG><a name="[a3]"></a>SetEPRxStatus</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPRxStatus))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Memory
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[11f]"></a>SetEPRxValid</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPRxValid))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[11d]"></a>SetEPTxAddr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[e6]"></a>SetEPTxCount</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxCount))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[a2]"></a>SetEPTxStatus</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxStatus))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bot_Abort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[11a]"></a>SetEPType</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPType))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_Reset
</UL>

<P><STRONG><a name="[c7]"></a>SetHSICLK</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys.o(i.SetHSICLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetHSICLK
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSICmd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadAccess64Cmd
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[cf]"></a>SetHSICLKToMSI</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, sys.o(i.SetHSICLKToMSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetHSICLKToMSI
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MSIRangeConfig
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSICmd
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_VoltageScalingConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_GetFlagStatus
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SLEEPPowerDownCmd
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadAccess64Cmd
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[ac]"></a>Set_CSW</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_bot.o(i.Set_CSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_CSW &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Verify10_Cmd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Start_Stop_Unit_Cmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Invalid_Cmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_In
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Memory
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
</UL>

<P><STRONG><a name="[ab]"></a>Set_Scsi_Sense_Data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_scsi.o(i.Set_Scsi_Sense_Data))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Verify10_Cmd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_TestUnitReady_Cmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Read10_Cmd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Invalid_Cmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Format_Cmd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBW_Decode
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Address_Management
</UL>

<P><STRONG><a name="[187]"></a>Set_System</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hw_config.o(i.Set_System))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Set_System &rArr; EXTI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[189]"></a>Set_USBClock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hw_config.o(i.Set_USBClock))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>Setup0_Process</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, usb_core.o(i.Setup0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSwap
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[230]"></a>SoftReset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sys.o(i.SoftReset))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[13d]"></a>Standard_ClearFeature</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, usb_core.o(i.Standard_ClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Standard_ClearFeature
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[4b]"></a>Standard_GetConfiguration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetConfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[116]"></a>Standard_GetDescriptorData</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_core.o(i.Standard_GetDescriptorData))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_GetStringDescriptor
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_GetDeviceDescriptor
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_GetConfigDescriptor
</UL>

<P><STRONG><a name="[4c]"></a>Standard_GetInterface</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[4a]"></a>Standard_GetStatus</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[13a]"></a>Standard_SetConfiguration</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[13b]"></a>Standard_SetDeviceFeature</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetDeviceFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetDeviceFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[13e]"></a>Standard_SetEndPointFeature</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, usb_core.o(i.Standard_SetEndPointFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Standard_SetEndPointFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[13c]"></a>Standard_SetInterface</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[dc]"></a>Stm32_Clock_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, sys.o(i.Stm32_Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Stm32_Clock_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_VoltageScalingConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[1dd]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[19]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, system_stm32l1xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Leave_LowPowerMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>TIM3_IRQHandler</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, timer.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 5184<LI>Call Chain = TIM3_IRQHandler &rArr; timer_powermanage_type &rArr; menu_keyprocess &rArr;  menu_keyprocess (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DateShow
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_when_user_press_key_type
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_save_map_type
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_powermanage_type
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lower2_type
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_guji_type
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM4_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usart2.o(i.TIM4_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[193]"></a>TIM4_Init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usart2.o(i.TIM4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM4_Init &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
</UL>

<P><STRONG><a name="[192]"></a>TIM4_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usart2.o(i.TIM4_Set))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l1xx_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[a9]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l1xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[14c]"></a>TIM_OC2Init</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32l1xx_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[a6]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l1xx_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[14b]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32l1xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[194]"></a>Timer_task</STRONG> (Thumb, 374 bytes, Stack size 32 bytes, timer.o(i.Timer_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 5200<LI>Call Chain = Timer_task &rArr; menu_keyprocess &rArr;  menu_keyprocess (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config_disable
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_On
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_power_ctrl
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_reflash
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_get_process
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c9]"></a>Timerx_Init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, timer.o(i.Timerx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Timerx_Init &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
</UL>

<P><STRONG><a name="[170]"></a>Transfer_Data_Request</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usb_bot.o(i.Transfer_Data_Request))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Transfer_Data_Request &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_RequestSense_Cmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadFormatCapacity_Cmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ReadCapacity10_Cmd
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ModeSense6_Cmd
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_ModeSense10_Cmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Inquiry_Cmd
</UL>

<P><STRONG><a name="[40]"></a>USART2_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, usart2.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>USART2_Init</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, usart2.o(i.USART2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART2_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Set
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
</UL>

<P><STRONG><a name="[19e]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l1xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_secpage_control
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_to_runmode_recoder
</UL>

<P><STRONG><a name="[19c]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, stm32l1xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[19d]"></a>USART_Init</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, stm32l1xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
</UL>

<P><STRONG><a name="[14d]"></a>USB_Cable_Config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hw_config.o(i.USB_Cable_Config))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_USBPuCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
</UL>

<P><STRONG><a name="[44]"></a>USB_FS_WKUP_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32_it.o(i.USB_FS_WKUP_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[198]"></a>USB_Init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_init.o(i.USB_Init))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[199]"></a>USB_Interrupts_Config</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hw_config.o(i.USB_Interrupts_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_Interrupts_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[196]"></a>USB_Interrupts_Config_disable</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, hw_config.o(i.USB_Interrupts_Config_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_Interrupts_Config_disable &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
</UL>

<P><STRONG><a name="[1a2]"></a>USB_Istr</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, usb_istr.o(i.USB_Istr))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_IRQHandler
</UL>

<P><STRONG><a name="[2e]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32_it.o(i.USB_LP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USB_LP_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>USB_SIL_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_sil.o(i.USB_SIL_Init))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MASS_init
</UL>

<P><STRONG><a name="[125]"></a>USB_SIL_Read</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usb_sil.o(i.USB_SIL_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_SIL_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mass_Storage_Out
</UL>

<P><STRONG><a name="[15d]"></a>USB_SIL_Write</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_sil.o(i.USB_SIL_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Data_Request
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Memory
</UL>

<P><STRONG><a name="[15]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_md.o(RESET)
</UL>
<P><STRONG><a name="[e5]"></a>UserToPMABufferCopy</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usb_mem.o(i.UserToPMABufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UserToPMABufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[171]"></a>Write_Memory</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, memory.o(i.Write_Memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 4240<LI>Call Chain = Write_Memory &rArr; MAL_Write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CSW
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAL_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCSI_Write10_Cmd
</UL>

<P><STRONG><a name="[1a4]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[263]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[8a]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_to_goto_lowpower
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mkdir_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_oldfile_nospace
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_allgujifile
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_EraseWord_Eeprom
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_set
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_s
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_input_process
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_update_process
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_latlon_to_index
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Time_Set
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_uncomp_data
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_rslt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reg_write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reg_read
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_pressure_tempreature
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[264]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[265]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[1a6]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[266]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[160]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_speed_change_display
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_arruite_change_display
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en_input
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_Analysis
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[267]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[268]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[1ac]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[1a7]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 830 bytes, Stack size 136 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1a9]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1aa]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[1ab]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1ad]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[269]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[26a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[26b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1b4]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[1b3]"></a>acos</STRONG> (Thumb, 586 bytes, Stack size 40 bytes, acos.o(i.acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
</UL>

<P><STRONG><a name="[231]"></a>anayes_angle</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, menutal.o(i.anayes_angle))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_the_fanxiang
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
</UL>

<P><STRONG><a name="[1b6]"></a>arriving_sound_proess</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, timer.o(i.arriving_sound_proess))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = arriving_sound_proess &rArr; di_and_flash_empet &rArr; Button_key_perss &rArr; PWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_timer_1s
</UL>

<P><STRONG><a name="[1b7]"></a>arry_Read</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, bmp085.o(i.arry_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = arry_Read &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendByte
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendACK
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reg_read
</UL>

<P><STRONG><a name="[1b8]"></a>arry_Write</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmp085.o(i.arry_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = arry_Write &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reg_write
</UL>

<P><STRONG><a name="[1b9]"></a>asin</STRONG> (Thumb, 584 bytes, Stack size 56 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
</UL>

<P><STRONG><a name="[1ba]"></a>atan</STRONG> (Thumb, 478 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[1bb]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
</UL>

<P><STRONG><a name="[9f]"></a>bmp085Convert</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, bmp085.o(i.bmp085Convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = bmp085Convert &rArr; bmp085ReadTemp &rArr; Multiple_read &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadTemp
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadPressure
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_get_process
</UL>

<P><STRONG><a name="[1bd]"></a>bmp085ReadPressure</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bmp085.o(i.bmp085ReadPressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = bmp085ReadPressure &rArr; Multiple_read &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085Convert
</UL>

<P><STRONG><a name="[1bc]"></a>bmp085ReadTemp</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bmp085.o(i.bmp085ReadTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = bmp085ReadTemp &rArr; Multiple_read &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085Convert
</UL>

<P><STRONG><a name="[1be]"></a>bmp280_get_comp_pres_32bit</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, bmp280.o(i.bmp280_get_comp_pres_32bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmp280_get_comp_pres_32bit
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_pressure_tempreature
</UL>

<P><STRONG><a name="[1c0]"></a>bmp280_get_comp_temp_32bit</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, bmp280.o(i.bmp280_get_comp_temp_32bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmp280_get_comp_temp_32bit
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_pressure_tempreature
</UL>

<P><STRONG><a name="[1c1]"></a>bmp280_get_config</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, bmp280.o(i.bmp280_get_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bmp280_get_config &rArr; bmp280_get_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_regs
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
</UL>

<P><STRONG><a name="[1c2]"></a>bmp280_get_regs</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmp280.o(i.bmp280_get_regs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmp280_get_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_uncomp_data
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_config
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_sensor
</UL>

<P><STRONG><a name="[1c3]"></a>bmp280_get_uncomp_data</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, bmp280.o(i.bmp280_get_uncomp_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bmp280_get_uncomp_data &rArr; bmp280_get_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_regs
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_read_pressure_tempreature
</UL>

<P><STRONG><a name="[1c4]"></a>bmp280_init</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, bmp280.o(i.bmp280_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = bmp280_init &rArr; bmp280_soft_reset &rArr; bmp280_set_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_soft_reset
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_regs
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
</UL>

<P><STRONG><a name="[9e]"></a>bmp280_read_pressure_tempreature</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, bmp085.o(i.bmp280_read_pressure_tempreature))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bmp280_read_pressure_tempreature &rArr; bmp280_get_uncomp_data &rArr; bmp280_get_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_uncomp_data
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_comp_temp_32bit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_comp_pres_32bit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_get_process
</UL>

<P><STRONG><a name="[1c6]"></a>bmp280_set_config</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bmp280.o(i.bmp280_set_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bmp280_set_config &rArr; conf_sensor &rArr; bmp280_soft_reset &rArr; bmp280_set_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_sensor
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
</UL>

<P><STRONG><a name="[1c8]"></a>bmp280_set_power_mode</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bmp280.o(i.bmp280_set_power_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bmp280_set_power_mode &rArr; conf_sensor &rArr; bmp280_soft_reset &rArr; bmp280_set_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_sensor
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
</UL>

<P><STRONG><a name="[1c9]"></a>bmp280_set_regs</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, bmp280.o(i.bmp280_set_regs))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bmp280_set_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_soft_reset
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_sensor
</UL>

<P><STRONG><a name="[1c5]"></a>bmp280_soft_reset</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, bmp280.o(i.bmp280_soft_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bmp280_soft_reset &rArr; bmp280_set_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_set_regs
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_sensor
</UL>

<P><STRONG><a name="[1ca]"></a>bmp_moudle_preinit</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bmp085.o(i.bmp_moudle_preinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = bmp_moudle_preinit &rArr; bmp280_init &rArr; bmp280_soft_reset &rArr; bmp280_set_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_set_power_mode
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_set_config
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_config
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_rslt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BMP085
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[1cc]"></a>buffer_Analysis</STRONG> (Thumb, 640 bytes, Stack size 112 bytes, menutal.o(i.buffer_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 4648<LI>Call Chain = buffer_Analysis &rArr; f_printf &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
</UL>

<P><STRONG><a name="[1cd]"></a>ceil</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, ceil.o(i.ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipart
</UL>

<P><STRONG><a name="[197]"></a>change_clk_need_int</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, main.o(i.change_clk_need_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = change_clk_need_int &rArr; uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[1ce]"></a>change_latlon_to_index</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, menutal.o(i.change_latlon_to_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = change_latlon_to_index &rArr; convert_show_en_input &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en_input
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[1d0]"></a>change_to_runmode_recoder</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, menutal.o(i.change_to_runmode_recoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = change_to_runmode_recoder &rArr; stm_write_eerpom &rArr; DATA_EEPROM_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_power_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[1d1]"></a>check_eeprom_init</STRONG> (Thumb, 1104 bytes, Stack size 40 bytes, menutal.o(i.check_eeprom_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = check_eeprom_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_power_ctrl
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
</UL>

<P><STRONG><a name="[15f]"></a>check_time</STRONG> (Thumb, 616 bytes, Stack size 56 bytes, menutal.o(i.check_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = check_time &rArr; rtc_set &rArr; RTC_TimeRegulate &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_guiji_message
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_receiver
</UL>

<P><STRONG><a name="[1e0]"></a>clust2sect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[21d]"></a>conversion</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bmp085.o(i.conversion))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Pressure_display
</UL>

<P><STRONG><a name="[1d5]"></a>convert_show_en</STRONG> (Thumb, 564 bytes, Stack size 64 bytes, menutal.o(i.convert_show_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = convert_show_en &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[1cf]"></a>convert_show_en_input</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, menutal.o(i.convert_show_en_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = convert_show_en_input &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_input_process
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_latlon_to_index
</UL>

<P><STRONG><a name="[1d6]"></a>convert_u32_to_index</STRONG> (Thumb, 614 bytes, Stack size 64 bytes, menutal.o(i.convert_u32_to_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = convert_u32_to_index &rArr; stm_write_eerpom &rArr; DATA_EEPROM_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[1d7]"></a>cos</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
</UL>

<P><STRONG><a name="[c8]"></a>delay_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, delay.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
</UL>

<P><STRONG><a name="[50]"></a>delay_ms</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadTemp
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp085ReadPressure
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multiple_read
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arriving_sound_proess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bmp085.o(i.bmp_moudle_preinit)
</UL>
<P><STRONG><a name="[97]"></a>delay_us</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, delay.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WAKEUP
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_SendACK
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_RecvACK
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_PowerDown
</UL>

<P><STRONG><a name="[d1]"></a>di_and_flash_empet</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, menutal.o(i.di_and_flash_empet))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = di_and_flash_empet &rArr; Button_key_perss &rArr; PWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_down_process
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arriving_sound_proess
</UL>

<P><STRONG><a name="[1f7]"></a>disk_initialize</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[1e6]"></a>disk_ioctl</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = disk_ioctl &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[1e7]"></a>disk_read</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = disk_read &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[1e8]"></a>disk_status</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, diskio.o(i.disk_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = disk_status &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[1e9]"></a>disk_write</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4216<LI>Call Chain = disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[16b]"></a>f_close</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 4280<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_append
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_update_process
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[1ec]"></a>f_closedir</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ff.o(i.f_closedir))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = f_closedir &rArr; validate &rArr; disk_status &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
</UL>

<P><STRONG><a name="[1ed]"></a>f_getfree</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, ff.o(i.f_getfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 4360<LI>Call Chain = f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
</UL>

<P><STRONG><a name="[1ef]"></a>f_lseek</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 4344<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_append
</UL>

<P><STRONG><a name="[162]"></a>f_mkdir</STRONG> (Thumb, 344 bytes, Stack size 88 bytes, ff.o(i.f_mkdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 4448<LI>Call Chain = f_mkdir &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mkdir_init
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[1f5]"></a>f_mkfs</STRONG> (Thumb, 1342 bytes, Stack size 112 bytes, ff.o(i.f_mkfs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4328<LI>Call Chain = f_mkfs &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mkdir_init
</UL>

<P><STRONG><a name="[1f8]"></a>f_mount</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4336<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mkdir_init
</UL>

<P><STRONG><a name="[1f9]"></a>f_open</STRONG> (Thumb, 320 bytes, Stack size 88 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 4448<LI>Call Chain = f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_append
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_update_process
</UL>

<P><STRONG><a name="[161]"></a>f_opendir</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 4392<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[16a]"></a>f_printf</STRONG> (Thumb, 488 bytes, Stack size 152 bytes, ff.o(i.f_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 4536<LI>Call Chain = f_printf &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpx_filehead_write
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_Analysis
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[1fc]"></a>f_read</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 4328<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
</UL>

<P><STRONG><a name="[1fd]"></a>f_readdir</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 4384<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
</UL>

<P><STRONG><a name="[1ea]"></a>f_sync</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 4272<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[f0]"></a>f_unlink</STRONG> (Thumb, 144 bytes, Stack size 88 bytes, ff.o(i.f_unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 4448<LI>Call Chain = f_unlink &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_oldfile_nospace
</UL>

<P><STRONG><a name="[164]"></a>f_write</STRONG> (Thumb, 382 bytes, Stack size 48 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4360<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[ff]"></a>find_moonrise_set</STRONG> (Thumb, 462 bytes, Stack size 112 bytes, gongshi.o(i.find_moonrise_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = find_moonrise_set &rArr; sin_alt &rArr; minimoon &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunMoonTime
</UL>

<P><STRONG><a name="[204]"></a>firmware_update_process</STRONG> (Thumb, 204 bytes, Stack size 568 bytes, menutal.o(i.firmware_update_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 5016<LI>Call Chain = firmware_update_process &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
</UL>

<P><STRONG><a name="[205]"></a>floor</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mjd
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipart
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;revolution
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rev180
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
</UL>

<P><STRONG><a name="[4e]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usart.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[206]"></a>frac</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gongshi.o(i.frac))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = frac &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
</UL>

<P><STRONG><a name="[207]"></a>getDistanceVer2</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, gongshi.o(i.getDistanceVer2))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = getDistanceVer2 &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rad
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
</UL>

<P><STRONG><a name="[209]"></a>get_angle</STRONG> (Thumb, 516 bytes, Stack size 56 bytes, gongshi.o(i.get_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = get_angle &rArr; cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[1d9]"></a>get_fat</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 4280<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[1f0]"></a>get_fattime</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, rtc.o(i.get_fattime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_fattime &rArr; RTC_TimeShow &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DateShow
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[22f]"></a>get_next</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, menutal.o(i.get_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[22e]"></a>get_prev</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, menutal.o(i.get_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_prev
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[20a]"></a>gps_data_receiver</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, timer.o(i.gps_data_receiver))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = gps_data_receiver &rArr; guji_Distance &rArr; getDistanceVer2 &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_3d_seq
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guji_Distance
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Analysis
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_porcess
</UL>

<P><STRONG><a name="[165]"></a>gpx_filehead_write</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, menutal.o(i.gpx_filehead_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4544<LI>Call Chain = gpx_filehead_write &rArr; f_printf &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[20b]"></a>guji_Distance</STRONG> (Thumb, 604 bytes, Stack size 56 bytes, menutal.o(i.guji_Distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = guji_Distance &rArr; getDistanceVer2 &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_receiver
</UL>

<P><STRONG><a name="[20e]"></a>handler_timer_1s</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, timer.o(i.handler_timer_1s))
<BR><BR>[Stack]<UL><LI>Max Depth = 4920<LI>Call Chain = handler_timer_1s &rArr; vddmv_adc_proess &rArr; DisplayIDDrunmV &rArr; Choose_power_mode &rArr; is_recoreding &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vddmv_adc_proess
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;powerlow_proess
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arriving_sound_proess
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_porcess
</UL>

<P><STRONG><a name="[51]"></a>i2c_reg_read</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, bmp085.o(i.i2c_reg_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = i2c_reg_read &rArr; arry_Read &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Read
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bmp085.o(i.bmp_moudle_preinit)
</UL>
<P><STRONG><a name="[52]"></a>i2c_reg_write</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, bmp085.o(i.i2c_reg_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = i2c_reg_write &rArr; arry_Write &rArr; BMP085_SendByte &rArr; IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_Write
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bmp085.o(i.bmp_moudle_preinit)
</UL>
<P><STRONG><a name="[211]"></a>ipart</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gongshi.o(i.ipart))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ipart &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range
</UL>

<P><STRONG><a name="[d2]"></a>is_recoreding</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, menutal.o(i.is_recoreding))
<BR><BR>[Stack]<UL><LI>Max Depth = 4800<LI>Call Chain = is_recoreding &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
</UL>

<P><STRONG><a name="[212]"></a>is_update_to_poweron</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, menutal.o(i.is_update_to_poweron))
<BR><BR>[Stack]<UL><LI>Max Depth = 5176<LI>Call Chain = is_update_to_poweron &rArr; menu_keyprocess &rArr;  menu_keyprocess (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[203]"></a>lmst</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, gongshi.o(i.lmst))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = lmst &rArr; range &rArr; ipart &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
</UL>

<P><STRONG><a name="[47]"></a>main</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 5200<LI>Call Chain = main &rArr; Timer_task &rArr; menu_keyprocess &rArr;  menu_keyprocess (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_pass
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_porcess
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_update_to_poweron
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_to_goto_lowpower
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_SetSpeed
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WAKEUP
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_RTC_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v1000_memalloc
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mkdir_init
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[218]"></a>main_porcess</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, timer.o(i.main_porcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 4936<LI>Call Chain = main_porcess &rArr; handler_timer_1s &rArr; vddmv_adc_proess &rArr; DisplayIDDrunmV &rArr; Choose_power_mode &rArr; is_recoreding &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_s
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_timer_1s
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_receiver
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24c]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v1000_memalloc
</UL>

<P><STRONG><a name="[5a]"></a>menu_3D_display</STRONG> (Thumb, 414 bytes, Stack size 40 bytes, menutal.o(i.menu_3D_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 4472<LI>Call Chain = menu_3D_display &rArr; menu_status_dispplay &rArr; show_levev_space &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_sl_number
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[20c]"></a>menu_3d_seq</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, menutal.o(i.menu_3d_seq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = menu_3d_seq
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_receiver
</UL>

<P><STRONG><a name="[57]"></a>menu_Pressure_display</STRONG> (Thumb, 762 bytes, Stack size 40 bytes, menutal.o(i.menu_Pressure_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = menu_Pressure_display &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conversion
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine_visual
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>menu_arruite_change_display</STRONG> (Thumb, 538 bytes, Stack size 32 bytes, menutal.o(i.menu_arruite_change_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = menu_arruite_change_display &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine_visual
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>menu_chaoxi_display</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, menutal.o(i.menu_chaoxi_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 4464<LI>Call Chain = menu_chaoxi_display &rArr; menu_status_dispplay &rArr; show_levev_space &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moon_test
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>menu_display_setting</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, menutal.o(i.menu_display_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 5104<LI>Call Chain = menu_display_setting &rArr; menu_setting_index_show &rArr; setting_index_23page &rArr; system_setting_item &rArr; firmware_update_process &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_index_show
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_down_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[222]"></a>menu_display_settingitem_recode</STRONG> (Thumb, 2078 bytes, Stack size 40 bytes, menutal.o(i.menu_display_settingitem_recode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4736<LI>Call Chain = menu_display_settingitem_recode &rArr; Del_allgujifile &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_allgujifile
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
</UL>

<P><STRONG><a name="[223]"></a>menu_enter_flash</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, menutal.o(i.menu_enter_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = menu_enter_flash &rArr; Movie_Show_Img &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_when_user_press_key_type
</UL>

<P><STRONG><a name="[5c]"></a>menu_guiji_display</STRONG> (Thumb, 1802 bytes, Stack size 40 bytes, menutal.o(i.menu_guiji_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 4840<LI>Call Chain = menu_guiji_display &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;what_is_numbe_10
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_gujiword
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_gujIcon_Status
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_gujIcon
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>menu_home_display</STRONG> (Thumb, 3158 bytes, Stack size 80 bytes, menutal.o(i.menu_home_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 5232<LI>Call Chain = menu_home_display &rArr; save_the_interest_place &rArr; f_printf &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_angle
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img_force1616
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_the_fanxiang
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_the_interest_place
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_input_process
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_latlon_to_index
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[22c]"></a>menu_input_process</STRONG> (Thumb, 528 bytes, Stack size 32 bytes, menutal.o(i.menu_input_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = menu_input_process &rArr; convert_show_en_input &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en_input
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[195]"></a>menu_keyprocess</STRONG> (Thumb, 1478 bytes, Stack size 40 bytes, menutal.o(i.menu_keyprocess))
<BR><BR>[Stack]<UL><LI>Max Depth = 5168 + In Cycle
<LI>Call Chain = menu_keyprocess &rArr;  menu_keyprocess (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_to_goto_lowpower
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_key_perss
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftReset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram_low
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_On
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_power_ctrl
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_down_process
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prev
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_to_runmode_recoder
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_update_to_poweron
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_powermanage_type
</UL>

<P><STRONG><a name="[53]"></a>menu_main_display</STRONG> (Thumb, 466 bytes, Stack size 40 bytes, menutal.o(i.menu_main_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 4472<LI>Call Chain = menu_main_display &rArr; menu_status_dispplay &rArr; show_levev_space &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;what_is_numbe_10
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>menu_real_crood_display</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, menutal.o(i.menu_real_crood_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 4456<LI>Call Chain = menu_real_crood_display &rArr; menu_status_dispplay &rArr; show_levev_space &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_show_en
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>menu_real_speed_display</STRONG> (Thumb, 842 bytes, Stack size 24 bytes, menutal.o(i.menu_real_speed_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 4456<LI>Call Chain = menu_real_speed_display &rArr; menu_status_dispplay &rArr; show_levev_space &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anayes_angle
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[19a]"></a>menu_reflash</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, menutal.o(i.menu_reflash))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
</UL>

<P><STRONG><a name="[220]"></a>menu_setting_control</STRONG> (Thumb, 626 bytes, Stack size 32 bytes, menutal.o(i.menu_setting_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 4856<LI>Call Chain = menu_setting_control &rArr; menu_setting_secpage_control &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvAltitude
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_up_system_limit
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_up_recode_limit
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_up_geren_limit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_up_format_limit
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_secpage_control
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_mainpage_control
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_setting
</UL>

<P><STRONG><a name="[221]"></a>menu_setting_index_show</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, menutal.o(i.menu_setting_index_show))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088<LI>Call Chain = menu_setting_index_show &rArr; setting_index_23page &rArr; system_setting_item &rArr; firmware_update_process &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_org
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_mainpage
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_setting
</UL>

<P><STRONG><a name="[233]"></a>menu_setting_mainpage_control</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, menutal.o(i.menu_setting_mainpage_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = menu_setting_mainpage_control &rArr; OLED_Fill &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
</UL>

<P><STRONG><a name="[232]"></a>menu_setting_secpage_control</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, menutal.o(i.menu_setting_secpage_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 4824<LI>Call Chain = menu_setting_secpage_control &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_power_ctrl
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
</UL>

<P><STRONG><a name="[226]"></a>menu_show_gujIcon</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, menutal.o(i.menu_show_gujIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = menu_show_gujIcon &rArr; Movie_Show_Img &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
</UL>

<P><STRONG><a name="[227]"></a>menu_show_gujIcon_Status</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, menutal.o(i.menu_show_gujIcon_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = menu_show_gujIcon_Status &rArr; Movie_Show_Img &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
</UL>

<P><STRONG><a name="[225]"></a>menu_show_gujiword</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, menutal.o(i.menu_show_gujiword))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = menu_show_gujiword &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
</UL>

<P><STRONG><a name="[21c]"></a>menu_show_sl_number</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, menutal.o(i.menu_show_sl_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = menu_show_sl_number &rArr; Movie_Show_Img_3 &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img_3
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_3D_display
</UL>

<P><STRONG><a name="[59]"></a>menu_speed_change_display</STRONG> (Thumb, 598 bytes, Stack size 32 bytes, menutal.o(i.menu_speed_change_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = menu_speed_change_display &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine_visual
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[21b]"></a>menu_status_dispplay</STRONG> (Thumb, 672 bytes, Stack size 40 bytes, menutal.o(i.menu_status_dispplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4432<LI>Call Chain = menu_status_dispplay &rArr; show_levev_space &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString_head
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString_24
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_show_gujIcon_Status
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_speed_display
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_real_crood_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_3D_display
</UL>

<P><STRONG><a name="[56]"></a>menu_temp_change_display</STRONG> (Thumb, 654 bytes, Stack size 40 bytes, menutal.o(i.menu_temp_change_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = menu_temp_change_display &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine_visual
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawVLine
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;what_is_numbe_10
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutal.o(.constdata)
</UL>
<P><STRONG><a name="[236]"></a>menu_up_format_limit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, menutal.o(i.menu_up_format_limit))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
</UL>

<P><STRONG><a name="[237]"></a>menu_up_geren_limit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menutal.o(i.menu_up_geren_limit))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
</UL>

<P><STRONG><a name="[235]"></a>menu_up_recode_limit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, menutal.o(i.menu_up_recode_limit))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
</UL>

<P><STRONG><a name="[234]"></a>menu_up_system_limit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, menutal.o(i.menu_up_system_limit))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
</UL>

<P><STRONG><a name="[23b]"></a>minimoon</STRONG> (Thumb, 1798 bytes, Stack size 112 bytes, gongshi.o(i.minimoon))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = minimoon &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frac
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
</UL>

<P><STRONG><a name="[23c]"></a>minisun</STRONG> (Thumb, 374 bytes, Stack size 40 bytes, gongshi.o(i.minisun))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = minisun &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frac
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
</UL>

<P><STRONG><a name="[fe]"></a>mjd</STRONG> (Thumb, 328 bytes, Stack size 64 bytes, gongshi.o(i.mjd))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mjd &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunMoonTime
</UL>

<P><STRONG><a name="[216]"></a>mkdir_init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, main.o(i.mkdir_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4464<LI>Call Chain = mkdir_init &rArr; f_mkdir &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v1000_memalloc
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
</UL>

<P><STRONG><a name="[21f]"></a>moon_test</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, gongshi.o(i.moon_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = moon_test &rArr; GetSunMoonTime &rArr; find_moonrise_set &rArr; sin_alt &rArr; minimoon &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunMoonTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
</UL>

<P><STRONG><a name="[163]"></a>open_append</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main.o(i.open_append))
<BR><BR>[Stack]<UL><LI>Max Depth = 4464<LI>Call Chain = open_append &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[92]"></a>pow</STRONG> (Thumb, 2510 bytes, Stack size 112 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
</UL>

<P><STRONG><a name="[210]"></a>powerlow_proess</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, timer.o(i.powerlow_proess))
<BR><BR>[Stack]<UL><LI>Max Depth = 4904<LI>Call Chain = powerlow_proess &rArr; Choose_power_mode &rArr; is_recoreding &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_timer_1s
</UL>

<P><STRONG><a name="[1cb]"></a>print_rslt</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bmp085.o(i.print_rslt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = print_rslt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp_moudle_preinit
</UL>

<P><STRONG><a name="[1da]"></a>put_fat</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 4288<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[202]"></a>quad</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, gongshi.o(i.quad))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = quad &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
</UL>

<P><STRONG><a name="[208]"></a>rad</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gongshi.o(i.rad))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rad &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
</UL>

<P><STRONG><a name="[213]"></a>range</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gongshi.o(i.range))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = range &rArr; ipart &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipart
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
</UL>

<P><STRONG><a name="[19b]"></a>read_poi_file</STRONG> (Thumb, 320 bytes, Stack size 624 bytes, menutal.o(i.read_poi_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072<LI>Call Chain = read_poi_file &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Pow
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[228]"></a>read_the_interest_place</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, menutal.o(i.read_the_interest_place))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = read_the_interest_place
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[217]"></a>restore_pass</STRONG> (Thumb, 256 bytes, Stack size 1176 bytes, flash.o(i.restore_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = restore_pass &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Min_arry32
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Min_arry
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_arry32
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_arry
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d4]"></a>rtc_set</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, rtc.o(i.rtc_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = rtc_set &rArr; RTC_TimeRegulate &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
</UL>

<P><STRONG><a name="[166]"></a>save_guiji_message</STRONG> (Thumb, 428 bytes, Stack size 56 bytes, menutal.o(i.save_guiji_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = save_guiji_message &rArr; check_time &rArr; rtc_set &rArr; RTC_TimeRegulate &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[22b]"></a>save_the_interest_place</STRONG> (Thumb, 200 bytes, Stack size 616 bytes, menutal.o(i.save_the_interest_place))
<BR><BR>[Stack]<UL><LI>Max Depth = 5152<LI>Call Chain = save_the_interest_place &rArr; f_printf &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[21a]"></a>save_tsp_s</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, menutal.o(i.save_tsp_s))
<BR><BR>[Stack]<UL><LI>Max Depth = 4224<LI>Call Chain = save_tsp_s &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Min_arry32
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Min_arry
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_arry32
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_arry
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_porcess
</UL>

<P><STRONG><a name="[219]"></a>save_tsp_tp</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, menutal.o(i.save_tsp_tp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4224<LI>Call Chain = save_tsp_tp &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Min_arry32
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Min_arry
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_arry32
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_arry
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_porcess
</UL>

<P><STRONG><a name="[ed]"></a>scan_directory_oldfile</STRONG> (Thumb, 294 bytes, Stack size 96 bytes, main.o(i.scan_directory_oldfile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4544 + In Cycle
<LI>Call Chain = scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_directory_oldfile
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_oldfile_nospace
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_allgujifile
</UL>

<P><STRONG><a name="[238]"></a>setting_index_23page</STRONG> (Thumb, 2196 bytes, Stack size 32 bytes, menutal.o(i.setting_index_23page))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088<LI>Call Chain = setting_index_23page &rArr; system_setting_item &rArr; firmware_update_process &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_index_show
</UL>

<P><STRONG><a name="[23a]"></a>setting_index_mainpage</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, menutal.o(i.setting_index_mainpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = setting_index_mainpage &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_index_show
</UL>

<P><STRONG><a name="[239]"></a>setting_index_org</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, menutal.o(i.setting_index_org))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = setting_index_org &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_index_show
</UL>

<P><STRONG><a name="[ee]"></a>show_levev_space</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, menutal.o(i.show_levev_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 4392<LI>Call Chain = show_levev_space &rArr; f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_oldfile_nospace
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_allgujifile
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status_dispplay
</UL>

<P><STRONG><a name="[22a]"></a>show_the_fanxiang</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, menutal.o(i.show_the_fanxiang))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = show_the_fanxiang &rArr; Movie_Show_Img &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anayes_angle
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_home_display
</UL>

<P><STRONG><a name="[200]"></a>sin</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin_alt
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
</UL>

<P><STRONG><a name="[201]"></a>sin_alt</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, gongshi.o(i.sin_alt))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = sin_alt &rArr; minimoon &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmst
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_moonrise_set
</UL>

<P><STRONG><a name="[1b5]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quad
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minisun
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minimoon
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistanceVer2
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[246]"></a>stm_EraseWord_Eeprom</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm_eeprom.o(i.stm_EraseWord_Eeprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = stm_EraseWord_Eeprom &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATA_EEPROM_Unlock
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATA_EEPROM_EraseWord
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
</UL>

<P><STRONG><a name="[168]"></a>stm_read_eerpom</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm_eeprom.o(i.stm_read_eerpom))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_update_to_poweron
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_the_interest_place
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_secpage_control
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_mainpage_control
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_control
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_input_process
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_latlon_to_index
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[167]"></a>stm_write_eerpom</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, stm_eeprom.o(i.stm_write_eerpom))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = stm_write_eerpom &rArr; DATA_EEPROM_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATA_EEPROM_Unlock
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATA_EEPROM_ProgramWord
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_poi_file
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_update_to_poweron
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_flash
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_setting_item
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_down_process
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_tp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tsp_s
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_the_interest_place
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setting_secpage_control
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_input_process
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_settingitem_recode
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_u32_to_index
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_to_runmode_recoder
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>

<P><STRONG><a name="[8e]"></a>str_cmpx</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, rtc.o(i.str_cmpx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = str_cmpx
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Time_Set
</UL>

<P><STRONG><a name="[24b]"></a>sunriset</STRONG> (Thumb, 500 bytes, Stack size 88 bytes, gongshi.o(i.sunriset))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = sunriset &rArr; sun_RA_dec &rArr; sunpos &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;revolution
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rev180
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sunriset
</UL>

<P><STRONG><a name="[22d]"></a>system_power_down_process</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, menutal.o(i.system_power_down_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 5128<LI>Call Chain = system_power_down_process &rArr; menu_display_setting &rArr; menu_setting_index_show &rArr; setting_index_23page &rArr; system_setting_item &rArr; firmware_update_process &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_display_setting
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;di_and_flash_empet
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>

<P><STRONG><a name="[245]"></a>system_setting_item</STRONG> (Thumb, 2566 bytes, Stack size 40 bytes, menutal.o(i.system_setting_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056<LI>Call Chain = system_setting_item &rArr; firmware_update_process &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_eeprom_init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mkdir_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_read_eerpom
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_EraseWord_Eeprom
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftReset
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString12
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMP085_Get_Altitude
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_update_process
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setting_index_23page
</UL>

<P><STRONG><a name="[21e]"></a>test_sunriset</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, menutal.o(i.test_sunriset))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = test_sunriset &rArr; sunriset &rArr; sun_RA_dec &rArr; sunpos &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_chaoxi_display
</UL>

<P><STRONG><a name="[18f]"></a>timer_guji_type</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, timer.o(i.timer_guji_type))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[18e]"></a>timer_lower2_type</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, timer.o(i.timer_lower2_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = timer_lower2_type &rArr; Movie_Show_Img &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh_Gram
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Movie_Show_Img
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[190]"></a>timer_powermanage_type</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, timer.o(i.timer_powermanage_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 5168<LI>Call Chain = timer_powermanage_type &rArr; menu_keyprocess &rArr;  menu_keyprocess (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_keyprocess
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[191]"></a>timer_save_map_type</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, timer.o(i.timer_save_map_type))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[18d]"></a>timer_when_user_press_key_type</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, timer.o(i.timer_when_user_press_key_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = timer_when_user_press_key_type &rArr; menu_enter_flash &rArr; Movie_Show_Img &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_enter_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[ca]"></a>uart_init</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, usart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choose_power_mode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_clk_need_int
</UL>

<P><STRONG><a name="[214]"></a>v1000_memalloc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.v1000_memalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = v1000_memalloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mkdir_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20f]"></a>vddmv_adc_proess</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, myadc.o(i.vddmv_adc_proess))
<BR><BR>[Stack]<UL><LI>Max Depth = 4912<LI>Call Chain = vddmv_adc_proess &rArr; DisplayIDDrunmV &rArr; Choose_power_mode &rArr; is_recoreding &rArr; Recording_guji &rArr; write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIDDrunmV
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_timer_1s
</UL>

<P><STRONG><a name="[224]"></a>what_is_numbe_10</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, menutal.o(i.what_is_numbe_10))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_temp_change_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_main_display
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_guiji_display
</UL>

<P><STRONG><a name="[169]"></a>write_flash</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, menutal.o(i.write_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 4712<LI>Call Chain = write_flash &rArr; Del_oldfile_nospace &rArr; scan_directory_oldfile &rArr;  scan_directory_oldfile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_levev_space
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_oldfile_nospace
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_write_eerpom
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_Analysis
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_task
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recording_guji
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[101]"></a>IntToUnicode</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, hw_config.o(i.IntToUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
</UL>

<P><STRONG><a name="[241]"></a>rev180</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gongshi.o(i.rev180))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = rev180 &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
</UL>

<P><STRONG><a name="[242]"></a>revolution</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gongshi.o(i.revolution))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = revolution &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
</UL>

<P><STRONG><a name="[249]"></a>sun_RA_dec</STRONG> (Thumb, 326 bytes, Stack size 56 bytes, gongshi.o(i.sun_RA_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = sun_RA_dec &rArr; sunpos &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunpos
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sunriset
</UL>

<P><STRONG><a name="[24a]"></a>sunpos</STRONG> (Thumb, 402 bytes, Stack size 64 bytes, gongshi.o(i.sunpos))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = sunpos &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;revolution
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sun_RA_dec
</UL>

<P><STRONG><a name="[18c]"></a>SetSysClock</STRONG> (Thumb, 184 bytes, Stack size 12 bytes, system_stm32l1xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e3]"></a>DataStageIn</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, usb_core.o(i.DataStageIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>

<P><STRONG><a name="[e7]"></a>DataStageOut</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, usb_core.o(i.DataStageOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DataStageOut
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
</UL>

<P><STRONG><a name="[ea]"></a>Data_Setup0</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, usb_core.o(i.Data_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[139]"></a>NoData_Setup0</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, usb_core.o(i.NoData_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NoData_Setup0 &rArr; Standard_ClearFeature
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetInterface
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetEndPointFeature
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetDeviceFeature
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetConfiguration
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[154]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l1xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>

<P><STRONG><a name="[159]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l1xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[1c7]"></a>conf_sensor</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, bmp280.o(i.conf_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = conf_sensor &rArr; bmp280_soft_reset &rArr; bmp280_set_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_soft_reset
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_set_regs
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_regs
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;null_ptr_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_set_power_mode
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_set_config
</UL>

<P><STRONG><a name="[1bf]"></a>null_ptr_check</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bmp280.o(i.null_ptr_check))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_set_power_mode
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_uncomp_data
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_config
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_comp_temp_32bit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_comp_pres_32bit
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_soft_reset
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_set_regs
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmp280_get_regs
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_sensor
</UL>

<P><STRONG><a name="[1d2]"></a>check_fs</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4264<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[1d8]"></a>create_chain</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 4312<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[1db]"></a>create_name</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = create_name
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[1de]"></a>dir_next</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 4336<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[1e1]"></a>dir_read</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 4352<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[1e2]"></a>dir_register</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 4352<LI>Call Chain = dir_register &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[1e5]"></a>dir_remove</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(i.dir_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 4312<LI>Call Chain = dir_remove &rArr; dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>

<P><STRONG><a name="[1e3]"></a>dir_sdi</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 4296<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[1ee]"></a>find_volume</STRONG> (Thumb, 554 bytes, Stack size 48 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 4312<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[1f1]"></a>follow_path</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 4360<LI>Call Chain = follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[1fe]"></a>get_fileinfo</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_fileinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[1f6]"></a>get_ldnumber</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[1fa]"></a>ld_clust</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(i.ld_clust))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[1e4]"></a>mem_cpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(i.mem_cpy))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[1dc]"></a>mem_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ff.o(i.mem_set))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[1d3]"></a>move_window</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 4256<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[1fb]"></a>putc_bfd</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, ff.o(i.putc_bfd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4384 + In Cycle
<LI>Call Chain = putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[1f3]"></a>remove_chain</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 4312<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[1f2]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[1f4]"></a>sync_fs</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4256<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[1df]"></a>sync_window</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 4240<LI>Call Chain = sync_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[1eb]"></a>validate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = validate &rArr; disk_status &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[1ae]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1a5]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[1b1]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1b0]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
