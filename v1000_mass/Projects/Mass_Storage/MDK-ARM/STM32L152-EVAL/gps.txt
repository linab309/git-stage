; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152-eval\gps.o --asm_dir=.\STM32L152-EVAL\ --list_dir=.\STM32L152-EVAL\ --depend=.\stm32l152-eval\gps.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152_EVAL -I..\src\user -I..\src\user\include -I..\src\SYSTEM\delay -I..\src\SYSTEM\sys -I..\src\SYSTEM\usart -I..\src\HARDWARE\ADC -I..\src\HARDWARE\BMP -I..\src\HARDWARE\DMA -I..\src\HARDWARE\FLASH -I..\src\HARDWARE\GPS -I..\src\HARDWARE\KEY -I..\src\HARDWARE\PWM -I..\src\HARDWARE\RTC -I..\src\HARDWARE\SPI -I..\src\HARDWARE\USART2 -I..\src\HARDWARE\TIMER -I..\src\EX -I..\src\USMART -I..\..\..\Libraries\CMSIS\Include -I..\src\ff11a\src -I..\src\ff11a\src\option -I..\src\HARDWARE\LED -I..\src\HARDWARE\OLED -I..\src\ff11a\src -I..\src\ff11a\src\option -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32L1xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_MD -DUSE_STM32L152_EVAL ..\src\HARDWARE\GPS\gps.c]
                          THUMB

                          AREA ||i.GPS_Analysis||, CODE, READONLY, ALIGN=1

                  GPS_Analysis PROC
;;;329    //buf:接收到的GPS数据缓冲区首地址
;;;330    void GPS_Analysis(nmea_msg *gpsx,u8 *buf)
000000  b570              PUSH     {r4-r6,lr}
;;;331    {
000002  460c              MOV      r4,r1
000004  4605              MOV      r5,r0
;;;332    	NMEA_GPGSV_Analysis(gpsx,buf);	//GPGSV解析
000006  f7fffffe          BL       NMEA_GPGSV_Analysis
;;;333    	NMEA_GPGGA_Analysis(gpsx,buf);	//GPGGA解析 	
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       NMEA_GPGGA_Analysis
;;;334    	NMEA_GPGSA_Analysis(gpsx,buf);	//GPGSA解析
000012  4621              MOV      r1,r4
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       NMEA_GPGSA_Analysis
;;;335    	NMEA_GPRMC_Analysis(gpsx,buf);	//GPRMC解析
00001a  4621              MOV      r1,r4
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       NMEA_GPRMC_Analysis
;;;336    	NMEA_GPVTG_Analysis(gpsx,buf);	//GPVTG解析
000022  4621              MOV      r1,r4
000024  4628              MOV      r0,r5
000026  e8bd4070          POP      {r4-r6,lr}
00002a  f7ffbffe          B.W      NMEA_GPVTG_Analysis
;;;337    }
;;;338    
                          ENDP


                          AREA ||i.NMEA_Comma_Pos||, CODE, READONLY, ALIGN=1

                  NMEA_Comma_Pos PROC
;;;19     
;;;20     u8 NMEA_Comma_Pos(u8 *buf,u8 cx)
000000  4603              MOV      r3,r0
;;;21     {	 		    
000002  e00d              B        |L2.32|
                  |L2.4|
;;;22     	u8 *p=buf;
;;;23     	while(cx)
;;;24     	{		 
;;;25     		if(*buf=='*'||*buf<' '||*buf>'z')return 0XFF;//遇到'*'或者非法字符,则不存在第cx个逗号
000004  7802              LDRB     r2,[r0,#0]
000006  2a2a              CMP      r2,#0x2a
000008  d003              BEQ      |L2.18|
00000a  2a20              CMP      r2,#0x20
00000c  d301              BCC      |L2.18|
00000e  2a7a              CMP      r2,#0x7a
000010  d901              BLS      |L2.22|
                  |L2.18|
000012  20ff              MOVS     r0,#0xff
;;;26     		if(*buf==',')cx--;
;;;27     		buf++;
;;;28     	}
;;;29     	return buf-p;	 
;;;30     }
000014  4770              BX       lr
                  |L2.22|
000016  2a2c              CMP      r2,#0x2c              ;26
000018  d101              BNE      |L2.30|
00001a  1e49              SUBS     r1,r1,#1              ;26
00001c  b2c9              UXTB     r1,r1                 ;26
                  |L2.30|
00001e  1c40              ADDS     r0,r0,#1              ;26
                  |L2.32|
000020  2900              CMP      r1,#0                 ;23
000022  d1ef              BNE      |L2.4|
000024  1ac0              SUBS     r0,r0,r3              ;29
000026  b2c0              UXTB     r0,r0                 ;29
000028  4770              BX       lr
;;;31     //m^n函数
                          ENDP


                          AREA ||i.NMEA_GPGGA_Analysis||, CODE, READONLY, ALIGN=2

                  NMEA_GPGGA_Analysis PROC
;;;121    //buf:接收到的GPS数据缓冲区首地址
;;;122    void NMEA_GPGGA_Analysis(nmea_msg *gpsx,u8 *buf)
000000  b538              PUSH     {r3-r5,lr}
;;;123    {
000002  460a              MOV      r2,r1
000004  4605              MOV      r5,r0
;;;124    	u8 *p1,dx;			 
;;;125    	u8 posx;    
;;;126    	p1=(u8*)strstr((const char *)buf,"$GPGGA");
000006  a114              ADR      r1,|L3.88|
000008  4610              MOV      r0,r2
00000a  f7fffffe          BL       strstr
00000e  4604              MOV      r4,r0
;;;127    	posx=NMEA_Comma_Pos(p1,6);								//得到GPS状态
000010  2106              MOVS     r1,#6
000012  f7fffffe          BL       NMEA_Comma_Pos
;;;128    	if(posx!=0XFF)gpsx->gpssta=NMEA_Str2num(p1+posx,&dx);	
000016  28ff              CMP      r0,#0xff
000018  d005              BEQ      |L3.38|
00001a  4420              ADD      r0,r0,r4
00001c  4669              MOV      r1,sp
00001e  f7fffffe          BL       NMEA_Str2num
000022  f8850065          STRB     r0,[r5,#0x65]
                  |L3.38|
;;;129    	posx=NMEA_Comma_Pos(p1,7);								//得到用于定位的卫星数
000026  2107              MOVS     r1,#7
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       NMEA_Comma_Pos
;;;130    	if(posx!=0XFF)gpsx->posslnum=NMEA_Str2num(p1+posx,&dx); 
00002e  28ff              CMP      r0,#0xff
000030  d005              BEQ      |L3.62|
000032  4420              ADD      r0,r0,r4
000034  4669              MOV      r1,sp
000036  f7fffffe          BL       NMEA_Str2num
00003a  f8850066          STRB     r0,[r5,#0x66]
                  |L3.62|
;;;131    	posx=NMEA_Comma_Pos(p1,9);	
00003e  2109              MOVS     r1,#9
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       NMEA_Comma_Pos
;;;132        //得到海拔高度
;;;133    #ifdef NG_LG_ENABLE
;;;134        if(NS_LG > 0)
;;;135        {
;;;136        	if(posx!=0XFF)gpsx->altitude= 0;//NMEA_Str2num(p1+posx,&dx);  
;;;137        }
;;;138        else
;;;139    #endif
;;;140        {
;;;141        	if(posx!=0XFF)gpsx->altitude= NMEA_Str2num(p1+posx,&dx);  
000046  28ff              CMP      r0,#0xff
000048  d004              BEQ      |L3.84|
00004a  4420              ADD      r0,r0,r4
00004c  4669              MOV      r1,sp
00004e  f7fffffe          BL       NMEA_Str2num
000052  67e8              STR      r0,[r5,#0x7c]
                  |L3.84|
;;;142        }
;;;143    }
000054  bd38              POP      {r3-r5,pc}
;;;144    //分析GPGSA信息
                          ENDP

000056  0000              DCW      0x0000
                  |L3.88|
000058  24475047          DCB      "$$GPGGA",0
00005c  474100  
00005f  00                DCB      0

                          AREA ||i.NMEA_GPGSA_Analysis||, CODE, READONLY, ALIGN=2

                  NMEA_GPGSA_Analysis PROC
;;;146    //buf:接收到的GPS数据缓冲区首地址
;;;147    void NMEA_GPGSA_Analysis(nmea_msg *gpsx,u8 *buf)
000000  b5f8              PUSH     {r3-r7,lr}
;;;148    {
000002  460a              MOV      r2,r1
000004  4606              MOV      r6,r0
;;;149    	u8 *p1,dx;			 
;;;150    	u8 posx; 
;;;151    	u8 i;   
;;;152    	p1=(u8*)strstr((const char *)buf,"$GPGSA");
000006  a124              ADR      r1,|L4.152|
000008  4610              MOV      r0,r2
00000a  f7fffffe          BL       strstr
00000e  4605              MOV      r5,r0
;;;153    	posx=NMEA_Comma_Pos(p1,2);		
000010  2102              MOVS     r1,#2
000012  f7fffffe          BL       NMEA_Comma_Pos
;;;154    	//得到定位类型
;;;155    #ifdef NG_LG_ENABLE	
;;;156    	if(NS_LG > 0 )
;;;157    	{
;;;158    	    if(posx!=0XFF)gpsx->fixmode=3;	
;;;159    	}
;;;160    	else
;;;161    #endif        
;;;162    	{
;;;163            if(posx!=0XFF)gpsx->fixmode=NMEA_Str2num(p1+posx,&dx);	
000016  28ff              CMP      r0,#0xff
000018  d005              BEQ      |L4.38|
00001a  4428              ADD      r0,r0,r5
00001c  4669              MOV      r1,sp
00001e  f7fffffe          BL       NMEA_Str2num
000022  f8860073          STRB     r0,[r6,#0x73]
                  |L4.38|
;;;164    	}
;;;165    	for(i=0;i<12;i++)										//得到定位卫星编号
000026  2400              MOVS     r4,#0
                  |L4.40|
;;;166    	{
;;;167    		posx=NMEA_Comma_Pos(p1,3+i);					 
000028  1ce0              ADDS     r0,r4,#3
00002a  b2c1              UXTB     r1,r0
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       NMEA_Comma_Pos
;;;168    		if(posx!=0XFF)gpsx->possl[i]=NMEA_Str2num(p1+posx,&dx);
000032  28ff              CMP      r0,#0xff
000034  d00a              BEQ      |L4.76|
000036  4428              ADD      r0,r0,r5
000038  4669              MOV      r1,sp
00003a  f7fffffe          BL       NMEA_Str2num
00003e  1931              ADDS     r1,r6,r4
000040  1c64              ADDS     r4,r4,#1
000042  b2e4              UXTB     r4,r4                 ;165
000044  f8810067          STRB     r0,[r1,#0x67]
000048  2c0c              CMP      r4,#0xc               ;165
00004a  d3ed              BCC      |L4.40|
                  |L4.76|
;;;169    		else break; 
;;;170    	}				  
;;;171    	posx=NMEA_Comma_Pos(p1,15);								//得到PDOP位置精度因子
00004c  210f              MOVS     r1,#0xf
00004e  4628              MOV      r0,r5
000050  f7fffffe          BL       NMEA_Comma_Pos
;;;172    	if(posx!=0XFF)gpsx->pdop=NMEA_Str2num(p1+posx,&dx);  
000054  28ff              CMP      r0,#0xff
000056  d005              BEQ      |L4.100|
000058  4428              ADD      r0,r0,r5
00005a  4669              MOV      r1,sp
00005c  f7fffffe          BL       NMEA_Str2num
000060  f8a60074          STRH     r0,[r6,#0x74]
                  |L4.100|
;;;173    	posx=NMEA_Comma_Pos(p1,16);								//得到HDOP位置精度因子
000064  2110              MOVS     r1,#0x10
000066  4628              MOV      r0,r5
000068  f7fffffe          BL       NMEA_Comma_Pos
;;;174    	if(posx!=0XFF)gpsx->hdop=NMEA_Str2num(p1+posx,&dx);  
00006c  28ff              CMP      r0,#0xff
00006e  d005              BEQ      |L4.124|
000070  4428              ADD      r0,r0,r5
000072  4669              MOV      r1,sp
000074  f7fffffe          BL       NMEA_Str2num
000078  f8a60076          STRH     r0,[r6,#0x76]
                  |L4.124|
;;;175    	posx=NMEA_Comma_Pos(p1,17);								//得到VDOP位置精度因子
00007c  2111              MOVS     r1,#0x11
00007e  4628              MOV      r0,r5
000080  f7fffffe          BL       NMEA_Comma_Pos
;;;176    	if(posx!=0XFF)gpsx->vdop=NMEA_Str2num(p1+posx,&dx);  
000084  28ff              CMP      r0,#0xff
000086  d005              BEQ      |L4.148|
000088  4428              ADD      r0,r0,r5
00008a  4669              MOV      r1,sp
00008c  f7fffffe          BL       NMEA_Str2num
000090  f8a60078          STRH     r0,[r6,#0x78]
                  |L4.148|
;;;177    }
000094  bdf8              POP      {r3-r7,pc}
;;;178    //分析GPRMC信息
                          ENDP

000096  0000              DCW      0x0000
                  |L4.152|
000098  24475047          DCB      "$$GPGSA",0
00009c  534100  
00009f  00                DCB      0

                          AREA ||i.NMEA_GPGSV_Analysis||, CODE, READONLY, ALIGN=2

                  NMEA_GPGSV_Analysis PROC
;;;82     //buf:接收到的GPS数据缓冲区首地址
;;;83     void NMEA_GPGSV_Analysis(nmea_msg *gpsx,u8 *buf)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;84     {
;;;85     	u8 *p,*p1,dx;
;;;86     	u8 len,i,j,slx=0;
;;;87     	u8 posx;   	 
;;;88     	p=buf;
000004  460c              MOV      r4,r1
000006  4682              MOV      r10,r0                ;84
000008  f04f0800          MOV      r8,#0                 ;86
;;;89     	p1=(u8*)strstr((const char *)p,"$GPGSV");
00000c  a135              ADR      r1,|L5.228|
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       strstr
000014  4605              MOV      r5,r0
;;;90     	len=p1[7]-'0';								//得到GPGSV的条数
000016  79c0              LDRB     r0,[r0,#7]
;;;91     	posx=NMEA_Comma_Pos(p1,3); 					//得到可见卫星总数
000018  2103              MOVS     r1,#3
00001a  3830              SUBS     r0,r0,#0x30           ;90
00001c  b2c7              UXTB     r7,r0                 ;90
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       NMEA_Comma_Pos
;;;92     	if(posx!=0XFF)gpsx->svnum=NMEA_Str2num(p1+posx,&dx);
000024  28ff              CMP      r0,#0xff
000026  d005              BEQ      |L5.52|
000028  4428              ADD      r0,r0,r5
00002a  4669              MOV      r1,sp
00002c  f7fffffe          BL       NMEA_Str2num
000030  f88a0000          STRB     r0,[r10,#0]
                  |L5.52|
;;;93     	for(i=0;i<len;i++)
000034  2600              MOVS     r6,#0
000036  e051              B        |L5.220|
                  |L5.56|
;;;94     	{	 
;;;95     		p1=(u8*)strstr((const char *)p,"$GPGSV");  
000038  a12a              ADR      r1,|L5.228|
00003a  4620              MOV      r0,r4
00003c  f7fffffe          BL       strstr
000040  4604              MOV      r4,r0
;;;96     		for(j=0;j<4;j++)
000042  2500              MOVS     r5,#0
;;;97     		{	  
;;;98     			posx=NMEA_Comma_Pos(p1,4+j*4);
000044  f04f0b04          MOV      r11,#4
                  |L5.72|
000048  eb0b0085          ADD      r0,r11,r5,LSL #2
00004c  b2c1              UXTB     r1,r0
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       NMEA_Comma_Pos
;;;99     			if(posx!=0XFF)gpsx->slmsg[slx].num=NMEA_Str2num(p1+posx,&dx);	//得到卫星编号
000054  28ff              CMP      r0,#0xff
000056  d03e              BEQ      |L5.214|
000058  4420              ADD      r0,r0,r4
00005a  4669              MOV      r1,sp
00005c  f7fffffe          BL       NMEA_Str2num
000060  eb080248          ADD      r2,r8,r8,LSL #1
000064  eb0a0942          ADD      r9,r10,r2,LSL #1
000068  f8890002          STRB     r0,[r9,#2]
;;;100    			else break; 
;;;101    			posx=NMEA_Comma_Pos(p1,5+j*4);
00006c  2005              MOVS     r0,#5
00006e  eb000085          ADD      r0,r0,r5,LSL #2
000072  b2c1              UXTB     r1,r0
000074  4620              MOV      r0,r4
000076  f7fffffe          BL       NMEA_Comma_Pos
;;;102    			if(posx!=0XFF)gpsx->slmsg[slx].eledeg=NMEA_Str2num(p1+posx,&dx);//得到卫星仰角 
00007a  28ff              CMP      r0,#0xff
00007c  d02b              BEQ      |L5.214|
00007e  4420              ADD      r0,r0,r4
000080  4669              MOV      r1,sp
000082  f7fffffe          BL       NMEA_Str2num
000086  f8890003          STRB     r0,[r9,#3]
;;;103    			else break;
;;;104    			posx=NMEA_Comma_Pos(p1,6+j*4);
00008a  2006              MOVS     r0,#6
00008c  eb000085          ADD      r0,r0,r5,LSL #2
000090  b2c1              UXTB     r1,r0
000092  4620              MOV      r0,r4
000094  f7fffffe          BL       NMEA_Comma_Pos
;;;105    			if(posx!=0XFF)gpsx->slmsg[slx].azideg=NMEA_Str2num(p1+posx,&dx);//得到卫星方位角
000098  28ff              CMP      r0,#0xff
00009a  d01c              BEQ      |L5.214|
00009c  4420              ADD      r0,r0,r4
00009e  4669              MOV      r1,sp
0000a0  f7fffffe          BL       NMEA_Str2num
0000a4  f8a90004          STRH     r0,[r9,#4]
;;;106    			else break; 
;;;107    			posx=NMEA_Comma_Pos(p1,7+j*4);
0000a8  2007              MOVS     r0,#7
0000aa  eb000085          ADD      r0,r0,r5,LSL #2
0000ae  b2c1              UXTB     r1,r0
0000b0  4620              MOV      r0,r4
0000b2  f7fffffe          BL       NMEA_Comma_Pos
;;;108    			
;;;109    			if(posx!=0XFF)gpsx->slmsg[slx].sn=NMEA_Str2num(p1+posx,&dx);	//得到卫星信噪比
0000b6  28ff              CMP      r0,#0xff
0000b8  d00d              BEQ      |L5.214|
0000ba  4420              ADD      r0,r0,r4
0000bc  4669              MOV      r1,sp
0000be  f7fffffe          BL       NMEA_Str2num
0000c2  f8890006          STRB     r0,[r9,#6]
;;;110    			else break;
;;;111    			slx++;	   
0000c6  1c6d              ADDS     r5,r5,#1
0000c8  f1080001          ADD      r0,r8,#1
0000cc  b2ed              UXTB     r5,r5                 ;96
0000ce  f00008ff          AND      r8,r0,#0xff
0000d2  2d04              CMP      r5,#4                 ;96
0000d4  d3b8              BCC      |L5.72|
                  |L5.214|
0000d6  1c76              ADDS     r6,r6,#1              ;109
0000d8  b2f6              UXTB     r6,r6                 ;93
0000da  1c64              ADDS     r4,r4,#1              ;93
                  |L5.220|
0000dc  42be              CMP      r6,r7                 ;93
0000de  d3ab              BCC      |L5.56|
;;;112    		}   
;;;113     		p=p1+1;//切换到下一个GPGSV信息
;;;114    	}   
;;;115    
;;;116    //	menu_3d_seq();	
;;;117    	
;;;118    }
0000e0  e8bd8ff8          POP      {r3-r11,pc}
;;;119    //分析GPGGA信息
                          ENDP

                  |L5.228|
0000e4  24475047          DCB      "$$GPGSV",0
0000e8  535600  
0000eb  00                DCB      0

                          AREA ||i.NMEA_GPRMC_Analysis||, CODE, READONLY, ALIGN=2

                  NMEA_GPRMC_Analysis PROC
;;;180    //buf:接收到的GPS数据缓冲区首地址
;;;181    void NMEA_GPRMC_Analysis(nmea_msg *gpsx,u8 *buf)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;182    {
000004  460a              MOV      r2,r1
000006  4604              MOV      r4,r0
;;;183    	u8 *p1,dx;			 
;;;184    	u8 posx;     
;;;185    	u32 temp;	   
;;;186    	float rs;  
;;;187    	p1=(u8*)strstr((const char *)buf,"$GPRMC");
000008  a170              ADR      r1,|L6.460|
00000a  4610              MOV      r0,r2
00000c  f7fffffe          BL       strstr
000010  4605              MOV      r5,r0
;;;188    	posx=NMEA_Comma_Pos(p1,1);								//得到UTC时间
000012  2101              MOVS     r1,#1
000014  f7fffffe          BL       NMEA_Comma_Pos
;;;189    	if(posx!=0XFF)
;;;190    	{
;;;191    		temp=NMEA_Str2num(p1+posx,&dx)/NMEA_Pow(10,dx);	 	//得到UTC时间,去掉ms
;;;192    		gpsx->utc.hour=temp/10000;
000018  f2427610          MOV      r6,#0x2710
;;;193    		gpsx->utc.min=(temp/100)%100;
00001c  f04f0864          MOV      r8,#0x64
000020  28ff              CMP      r0,#0xff              ;189
000022  d01c              BEQ      |L6.94|
000024  4428              ADD      r0,r0,r5              ;191
000026  4669              MOV      r1,sp                 ;191
000028  f7fffffe          BL       NMEA_Str2num
00002c  4607              MOV      r7,r0                 ;191
00002e  f89d1000          LDRB     r1,[sp,#0]            ;191
000032  200a              MOVS     r0,#0xa               ;191
000034  f7fffffe          BL       NMEA_Pow
000038  fbb7f1f0          UDIV     r1,r7,r0              ;191
00003c  fbb1f0f6          UDIV     r0,r1,r6              ;192
000040  f8840054          STRB     r0,[r4,#0x54]         ;192
000044  4640              MOV      r0,r8
000046  fbb1f2f0          UDIV     r2,r1,r0
00004a  fbb2f3f0          UDIV     r3,r2,r0
00004e  fb082313          MLS      r3,r8,r3,r2
;;;194    		gpsx->utc.sec=temp%100;	 	 
000052  fb081012          MLS      r0,r8,r2,r1
000056  f8843055          STRB     r3,[r4,#0x55]         ;193
00005a  f8840056          STRB     r0,[r4,#0x56]
                  |L6.94|
;;;195    	}			  			  
;;;196    	posx=NMEA_Comma_Pos(p1,3);								//得到纬度
00005e  2103              MOVS     r1,#3
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       NMEA_Comma_Pos
;;;197    	if(posx!=0XFF)
;;;198    	{
;;;199    		temp=NMEA_Str2num(p1+posx,&dx);		 	 
;;;200    #ifdef NG_LG_ENABLE
;;;201    
;;;202            if(NS_LG > 0)
;;;203            {
;;;204               gpsx->latitude= 45;//temp/NMEA_Pow(10,dx+2);	//得到°
;;;205               rs= 0 ;//temp%NMEA_Pow(10,dx+2);
;;;206            }
;;;207    
;;;208    		else
;;;209    #endif        
;;;210    
;;;211    		{
;;;212    		    gpsx->latitude=temp/NMEA_Pow(10,dx+2);	//得到°
;;;213    		    rs= temp%NMEA_Pow(10,dx+2);		
;;;214    		}//得到'		 
;;;215    		gpsx->latitude=gpsx->latitude*NMEA_Pow(10,6)+(rs*NMEA_Pow(10,6-dx))/60;//转换为°
000066  f8df916c          LDR      r9,|L6.468|
00006a  28ff              CMP      r0,#0xff              ;197
00006c  d03b              BEQ      |L6.230|
00006e  4428              ADD      r0,r0,r5              ;199
000070  4669              MOV      r1,sp                 ;199
000072  f7fffffe          BL       NMEA_Str2num
000076  4607              MOV      r7,r0                 ;199
000078  f89d0000          LDRB     r0,[sp,#0]            ;212
00007c  1c80              ADDS     r0,r0,#2              ;212
00007e  b2c1              UXTB     r1,r0                 ;212
000080  200a              MOVS     r0,#0xa               ;212
000082  f7fffffe          BL       NMEA_Pow
000086  fbb7f0f0          UDIV     r0,r7,r0              ;212
00008a  65a0              STR      r0,[r4,#0x58]         ;213
00008c  f89d0000          LDRB     r0,[sp,#0]            ;213
000090  1c80              ADDS     r0,r0,#2              ;213
000092  b2c1              UXTB     r1,r0                 ;213
000094  200a              MOVS     r0,#0xa               ;213
000096  f7fffffe          BL       NMEA_Pow
00009a  fbb7f1f0          UDIV     r1,r7,r0              ;213
00009e  fb007011          MLS      r0,r0,r1,r7           ;213
0000a2  f7fffffe          BL       __aeabi_ui2f
0000a6  4607              MOV      r7,r0                 ;213
0000a8  f89d0000          LDRB     r0,[sp,#0]
0000ac  f1c00006          RSB      r0,r0,#6
0000b0  b2c1              UXTB     r1,r0
0000b2  200a              MOVS     r0,#0xa
0000b4  f7fffffe          BL       NMEA_Pow
0000b8  f7fffffe          BL       __aeabi_ui2f
0000bc  4639              MOV      r1,r7
0000be  f7fffffe          BL       __aeabi_fmul
0000c2  4649              MOV      r1,r9
0000c4  f7fffffe          BL       __aeabi_fdiv
0000c8  4607              MOV      r7,r0
0000ca  2106              MOVS     r1,#6
0000cc  200a              MOVS     r0,#0xa
0000ce  f7fffffe          BL       NMEA_Pow
0000d2  6da1              LDR      r1,[r4,#0x58]
0000d4  4348              MULS     r0,r1,r0
0000d6  f7fffffe          BL       __aeabi_ui2f
0000da  4639              MOV      r1,r7
0000dc  f7fffffe          BL       __aeabi_fadd
0000e0  f7fffffe          BL       __aeabi_f2uiz
0000e4  65a0              STR      r0,[r4,#0x58]
                  |L6.230|
;;;216    
;;;217    //		gpsx->latitude = temp;
;;;218    	}
;;;219    	posx=NMEA_Comma_Pos(p1,4);		
0000e6  2104              MOVS     r1,#4
0000e8  4628              MOV      r0,r5
0000ea  f7fffffe          BL       NMEA_Comma_Pos
;;;220    	//南纬还是北纬 
;;;221    	if(posx!=0XFF)
0000ee  28ff              CMP      r0,#0xff
0000f0  d002              BEQ      |L6.248|
;;;222        {
;;;223    #ifdef NG_LG_ENABLE   
;;;224            if((NS_LG == 1)||(NS_LG == 3))
;;;225                gpsx->nshemi='N';	
;;;226            else if((NS_LG == 2)||(NS_LG == 4))
;;;227                gpsx->nshemi='S';//*(p1+posx);	
;;;228            else
;;;229    #endif            
;;;230                gpsx->nshemi=*(p1+posx);	
0000f2  5c28              LDRB     r0,[r5,r0]
0000f4  f884005c          STRB     r0,[r4,#0x5c]
                  |L6.248|
;;;231    	}
;;;232     	posx=NMEA_Comma_Pos(p1,5);								//得到经度
0000f8  2105              MOVS     r1,#5
0000fa  4628              MOV      r0,r5
0000fc  f7fffffe          BL       NMEA_Comma_Pos
;;;233    	if(posx!=0XFF)
000100  28ff              CMP      r0,#0xff
000102  d03b              BEQ      |L6.380|
;;;234    	{												  
;;;235    		temp=NMEA_Str2num(p1+posx,&dx);	
000104  4428              ADD      r0,r0,r5
000106  4669              MOV      r1,sp
000108  f7fffffe          BL       NMEA_Str2num
00010c  4607              MOV      r7,r0
;;;236    #ifdef NG_LG_ENABLE
;;;237    
;;;238    
;;;239            if(NS_LG > 0)
;;;240            {
;;;241        		gpsx->longitude = 90;//temp/NMEA_Pow(10,dx+2);	//得到°
;;;242        		rs= 0 ;//temp%NMEA_Pow(10,dx+2);
;;;243    		}
;;;244          
;;;245    		else
;;;246    #endif  
;;;247    
;;;248    		{
;;;249        		gpsx->longitude=temp/NMEA_Pow(10,dx+2);	//得到°
00010e  f89d0000          LDRB     r0,[sp,#0]
000112  1c80              ADDS     r0,r0,#2
000114  b2c1              UXTB     r1,r0
000116  200a              MOVS     r0,#0xa
000118  f7fffffe          BL       NMEA_Pow
00011c  fbb7f0f0          UDIV     r0,r7,r0
;;;250        		rs=temp%NMEA_Pow(10,dx+2);				//得到'		 
000120  6620              STR      r0,[r4,#0x60]
000122  f89d0000          LDRB     r0,[sp,#0]
000126  1c80              ADDS     r0,r0,#2
000128  b2c1              UXTB     r1,r0
00012a  200a              MOVS     r0,#0xa
00012c  f7fffffe          BL       NMEA_Pow
000130  fbb7f1f0          UDIV     r1,r7,r0
000134  fb007011          MLS      r0,r0,r1,r7
000138  f7fffffe          BL       __aeabi_ui2f
00013c  4607              MOV      r7,r0
;;;251    		}
;;;252    		gpsx->longitude=gpsx->longitude*NMEA_Pow(10,6)+(rs*NMEA_Pow(10,6-dx))/60;//转换为° 
00013e  f89d0000          LDRB     r0,[sp,#0]
000142  f1c00006          RSB      r0,r0,#6
000146  b2c1              UXTB     r1,r0
000148  200a              MOVS     r0,#0xa
00014a  f7fffffe          BL       NMEA_Pow
00014e  f7fffffe          BL       __aeabi_ui2f
000152  4639              MOV      r1,r7
000154  f7fffffe          BL       __aeabi_fmul
000158  4649              MOV      r1,r9
00015a  f7fffffe          BL       __aeabi_fdiv
00015e  4607              MOV      r7,r0
000160  2106              MOVS     r1,#6
000162  200a              MOVS     r0,#0xa
000164  f7fffffe          BL       NMEA_Pow
000168  6e21              LDR      r1,[r4,#0x60]
00016a  4348              MULS     r0,r1,r0
00016c  f7fffffe          BL       __aeabi_ui2f
000170  4639              MOV      r1,r7
000172  f7fffffe          BL       __aeabi_fadd
000176  f7fffffe          BL       __aeabi_f2uiz
00017a  6620              STR      r0,[r4,#0x60]
                  |L6.380|
;;;253    	
;;;254    //		gpsx->longitude = temp;
;;;255    	}
;;;256    	posx=NMEA_Comma_Pos(p1,6);								//东经还是西经
00017c  2106              MOVS     r1,#6
00017e  4628              MOV      r0,r5
000180  f7fffffe          BL       NMEA_Comma_Pos
;;;257    	if(posx!=0XFF)
000184  28ff              CMP      r0,#0xff
000186  d002              BEQ      |L6.398|
;;;258    	{
;;;259    	
;;;260    #ifdef NG_LG_ENABLE
;;;261    	     if((NS_LG == 1)||(NS_LG == 2))
;;;262    	        gpsx->ewhemi='E';	
;;;263    	     else if((NS_LG == 3)||(NS_LG == 4))
;;;264      	         gpsx->ewhemi='W';//*(p1+posx);	
;;;265      	     else
;;;266    #endif            
;;;267      	         gpsx->ewhemi=*(p1+posx);	
000188  5c28              LDRB     r0,[r5,r0]
00018a  f8840064          STRB     r0,[r4,#0x64]
                  |L6.398|
;;;268    	 
;;;269    	 }
;;;270    	posx=NMEA_Comma_Pos(p1,9);								//得到UTC日期
00018e  2109              MOVS     r1,#9
000190  4628              MOV      r0,r5
000192  f7fffffe          BL       NMEA_Comma_Pos
;;;271    	if(posx!=0XFF)
000196  28ff              CMP      r0,#0xff
000198  d016              BEQ      |L6.456|
;;;272    	{
;;;273    		temp=NMEA_Str2num(p1+posx,&dx);		 				//得到UTC日期
00019a  4428              ADD      r0,r0,r5
00019c  4669              MOV      r1,sp
00019e  f7fffffe          BL       NMEA_Str2num
;;;274    		gpsx->utc.date=temp/10000;
0001a2  fbb0f1f6          UDIV     r1,r0,r6
0001a6  f8841053          STRB     r1,[r4,#0x53]
;;;275    		gpsx->utc.month=(temp/100)%100;
0001aa  4641              MOV      r1,r8
0001ac  fbb0f2f1          UDIV     r2,r0,r1
0001b0  fbb2f3f1          UDIV     r3,r2,r1
0001b4  fb082313          MLS      r3,r8,r3,r2
;;;276    		gpsx->utc.year=2000+temp%100;	 
0001b8  fb080012          MLS      r0,r8,r2,r0
0001bc  f8843052          STRB     r3,[r4,#0x52]         ;275
0001c0  f50060fa          ADD      r0,r0,#0x7d0
0001c4  f8a40050          STRH     r0,[r4,#0x50]
                  |L6.456|
;;;277    
;;;278    	    //v1000_debug("\r\n%d-%d-%d    %d-%d-%d\r\n",gpsx->utc.year,gpsx->utc.month,gpsx->utc.date,gpsx->utc.hour,gpsx->utc.min,gpsx->utc.sec);
;;;279    
;;;280    
;;;281    
;;;282    	} 
;;;283    }
0001c8  e8bd83f8          POP      {r3-r9,pc}
;;;284    //分析GPVTG信息
                          ENDP

                  |L6.460|
0001cc  24475052          DCB      "$$GPRMC",0
0001d0  4d4300  
0001d3  00                DCB      0
                  |L6.468|
                          DCD      0x42700000

                          AREA ||i.NMEA_GPVTG_Analysis||, CODE, READONLY, ALIGN=2

                  NMEA_GPVTG_Analysis PROC
;;;286    //buf:接收到的GPS数据缓冲区首地址
;;;287    void NMEA_GPVTG_Analysis(nmea_msg *gpsx,u8 *buf)
000000  b538              PUSH     {r3-r5,lr}
;;;288    {
000002  460a              MOV      r2,r1
000004  4604              MOV      r4,r0
;;;289    	u8 *p1,dx;			 
;;;290    	u8 posx;    
;;;291    	p1=(u8*)strstr((const char *)buf,"$GPVTG");							 
000006  a11d              ADR      r1,|L7.124|
000008  4610              MOV      r0,r2
00000a  f7fffffe          BL       strstr
00000e  4605              MOV      r5,r0
;;;292    	posx=NMEA_Comma_Pos(p1,7);								//得到地面速率
000010  2107              MOVS     r1,#7
000012  f7fffffe          BL       NMEA_Comma_Pos
;;;293    	if(posx!=0XFF)
000016  28ff              CMP      r0,#0xff
000018  d014              BEQ      |L7.68|
;;;294    	{
;;;295    #ifdef NG_LG_ENABLE	
;;;296             if(NS_LG > 0)
;;;297             {
;;;298    	       	gpsx->speed= 100;//NMEA_Str2num(p1+posx,&dx);
;;;299             }
;;;300             else
;;;301    #endif            
;;;302              	gpsx->speed= NMEA_Str2num(p1+posx,&dx);
00001a  4428              ADD      r0,r0,r5
00001c  4669              MOV      r1,sp
00001e  f7fffffe          BL       NMEA_Str2num
;;;303    		if(dx<3)gpsx->speed*=NMEA_Pow(10,3-dx);	 	 		//确保扩大1000倍
000022  f8c40080          STR      r0,[r4,#0x80]
000026  f89d0000          LDRB     r0,[sp,#0]
00002a  2803              CMP      r0,#3
00002c  d20a              BCS      |L7.68|
00002e  f1c00003          RSB      r0,r0,#3
000032  b2c1              UXTB     r1,r0
000034  200a              MOVS     r0,#0xa
000036  f7fffffe          BL       NMEA_Pow
00003a  f8d41080          LDR      r1,[r4,#0x80]
00003e  4348              MULS     r0,r1,r0
000040  f8c40080          STR      r0,[r4,#0x80]
                  |L7.68|
;;;304    		
;;;305    	}
;;;306    
;;;307    	posx=NMEA_Comma_Pos(p1,1);								//得到地面速率
000044  2101              MOVS     r1,#1
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       NMEA_Comma_Pos
;;;308    	if(posx!=0XFF)
00004c  28ff              CMP      r0,#0xff
00004e  d013              BEQ      |L7.120|
;;;309    	{
;;;310    
;;;311    #ifdef NG_LG_ENABLE	
;;;312            if(NS_LG > 0)
;;;313            {
;;;314                gpsx->angle= 0;//NMEA_Str2num(p1+posx,&dx);
;;;315    		}
;;;316    		else
;;;317    #endif            
;;;318    		{
;;;319    		    gpsx->angle= NMEA_Str2num(p1+posx,&dx);
000050  4428              ADD      r0,r0,r5
000052  4669              MOV      r1,sp
000054  f7fffffe          BL       NMEA_Str2num
;;;320    
;;;321    		}
;;;322    		if(dx<3)gpsx->angle*=NMEA_Pow(10,3-dx);	 	 		//确保扩大1000倍
000058  f8c40084          STR      r0,[r4,#0x84]
00005c  f89d0000          LDRB     r0,[sp,#0]
000060  2803              CMP      r0,#3
000062  d209              BCS      |L7.120|
000064  f1c00003          RSB      r0,r0,#3
000068  b2c1              UXTB     r1,r0
00006a  200a              MOVS     r0,#0xa
00006c  f7fffffe          BL       NMEA_Pow
000070  f8541f84          LDR      r1,[r4,#0x84]!
000074  4348              MULS     r0,r1,r0
000076  6020              STR      r0,[r4,#0]
                  |L7.120|
;;;323    		
;;;324    	}
;;;325    	
;;;326    }  
000078  bd38              POP      {r3-r5,pc}
;;;327    //提取NMEA-0183信息
                          ENDP

00007a  0000              DCW      0x0000
                  |L7.124|
00007c  24475056          DCB      "$$GPVTG",0
000080  544700  
000083  00                DCB      0

                          AREA ||i.NMEA_Pow||, CODE, READONLY, ALIGN=1

                  NMEA_Pow PROC
;;;32     //返回值:m^n次方.
;;;33     u32 NMEA_Pow(u8 m,u8 n)
000000  4602              MOV      r2,r0
;;;34     {
;;;35     	u32 result=1;	 
000002  2001              MOVS     r0,#1
000004  e000              B        |L8.8|
                  |L8.6|
;;;36     	while(n--)result*=m;    
000006  4350              MULS     r0,r2,r0
                  |L8.8|
000008  1e49              SUBS     r1,r1,#1
00000a  b2c9              UXTB     r1,r1
00000c  d2fb              BCS      |L8.6|
;;;37     	return result;
;;;38     }
00000e  4770              BX       lr
;;;39     //str转换为数字,以','或者'*'结束
                          ENDP


                          AREA ||i.NMEA_Str2num||, CODE, READONLY, ALIGN=1

                  NMEA_Str2num PROC
;;;42     //返回值:转换后的数值
;;;43     int NMEA_Str2num(u8 *buf,u8*dx)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;44     {
;;;45     	u8 *p=buf;
;;;46     	u32 ires=0,fres=0;
000004  f04f0a00          MOV      r10,#0
000008  468b              MOV      r11,r1                ;44
00000a  4680              MOV      r8,r0                 ;44
00000c  46d1              MOV      r9,r10
;;;47     	u8 ilen=0,flen=0,i;
00000e  4655              MOV      r5,r10
000010  4654              MOV      r4,r10
;;;48     	u8 mask=0;
000012  4656              MOV      r6,r10
                  |L9.20|
;;;49     	int res;
;;;50     	while(1) //得到整数和小数的长度
;;;51     	{
;;;52     		if(*p=='-'){mask|=0X02;p++;}//是负数
000014  7801              LDRB     r1,[r0,#0]
000016  292d              CMP      r1,#0x2d
000018  d102              BNE      |L9.32|
00001a  f0460602          ORR      r6,r6,#2
00001e  1c40              ADDS     r0,r0,#1
                  |L9.32|
;;;53     		if(*p==','||(*p=='*')||(*p=='\0'))break;//遇到结束了
000020  7801              LDRB     r1,[r0,#0]
000022  292c              CMP      r1,#0x2c
000024  d009              BEQ      |L9.58|
000026  292a              CMP      r1,#0x2a
000028  d007              BEQ      |L9.58|
00002a  b131              CBZ      r1,|L9.58|
;;;54     		if(*p=='.'){mask|=0X01;p++;}//遇到小数点了
00002c  292e              CMP      r1,#0x2e
00002e  d00a              BEQ      |L9.70|
000030  3930              SUBS     r1,r1,#0x30
;;;55     		else if(*p>'9'||(*p<'0'))	//有非法字符
000032  290a              CMP      r1,#0xa
000034  d30a              BCC      |L9.76|
;;;56     		{	
;;;57     			ilen=0;
000036  2500              MOVS     r5,#0
;;;58     			flen=0;
000038  462c              MOV      r4,r5
                  |L9.58|
;;;59     			break;
;;;60     		}	
;;;61     		if(mask&0X01)flen++;
;;;62     		else ilen++;
;;;63     		p++;
;;;64     	}
;;;65     	if(mask&0X02)buf++;	//去掉负号
00003a  07b0              LSLS     r0,r6,#30
00003c  d501              BPL      |L9.66|
00003e  f1080801          ADD      r8,r8,#1
                  |L9.66|
;;;66     	for(i=0;i<ilen;i++)	//得到整数部分数据
000042  2700              MOVS     r7,#0
000044  e018              B        |L9.120|
                  |L9.70|
000046  f0460601          ORR      r6,r6,#1              ;54
00004a  1c40              ADDS     r0,r0,#1              ;54
                  |L9.76|
00004c  07f1              LSLS     r1,r6,#31             ;61
00004e  d002              BEQ      |L9.86|
000050  1c64              ADDS     r4,r4,#1              ;61
000052  b2e4              UXTB     r4,r4                 ;61
000054  e001              B        |L9.90|
                  |L9.86|
000056  1c6d              ADDS     r5,r5,#1              ;61
000058  b2ed              UXTB     r5,r5                 ;62
                  |L9.90|
00005a  1c40              ADDS     r0,r0,#1              ;62
00005c  e7da              B        |L9.20|
                  |L9.94|
;;;67     	{  
;;;68     		ires+=NMEA_Pow(10,ilen-1-i)*(buf[i]-'0');
00005e  1be8              SUBS     r0,r5,r7
000060  1e40              SUBS     r0,r0,#1
000062  b2c1              UXTB     r1,r0
000064  200a              MOVS     r0,#0xa
000066  f7fffffe          BL       NMEA_Pow
00006a  f8181007          LDRB     r1,[r8,r7]
00006e  3930              SUBS     r1,r1,#0x30
000070  fb00aa01          MLA      r10,r0,r1,r10
000074  1c7f              ADDS     r7,r7,#1
000076  b2ff              UXTB     r7,r7                 ;66
                  |L9.120|
000078  42af              CMP      r7,r5                 ;66
00007a  d3f0              BCC      |L9.94|
;;;69     	}
;;;70     	if(flen>6)flen=6;	//最多取5位小数
00007c  2c06              CMP      r4,#6
00007e  d900              BLS      |L9.130|
000080  2406              MOVS     r4,#6
                  |L9.130|
;;;71     	*dx=flen;	 		//小数点位数
000082  f88b4000          STRB     r4,[r11,#0]
;;;72     	for(i=0;i<flen;i++)	//得到小数部分数据
000086  2700              MOVS     r7,#0
000088  e00e              B        |L9.168|
                  |L9.138|
;;;73     	{  
;;;74     		fres+=NMEA_Pow(10,flen-1-i)*(buf[ilen+1+i]-'0');
00008a  1be0              SUBS     r0,r4,r7
00008c  1e40              SUBS     r0,r0,#1
00008e  b2c1              UXTB     r1,r0
000090  200a              MOVS     r0,#0xa
000092  f7fffffe          BL       NMEA_Pow
000096  19ea              ADDS     r2,r5,r7
000098  eb020108          ADD      r1,r2,r8
00009c  7849              LDRB     r1,[r1,#1]
00009e  3930              SUBS     r1,r1,#0x30
0000a0  fb009901          MLA      r9,r0,r1,r9
0000a4  1c7f              ADDS     r7,r7,#1
0000a6  b2ff              UXTB     r7,r7                 ;72
                  |L9.168|
0000a8  42a7              CMP      r7,r4                 ;72
0000aa  d3ee              BCC      |L9.138|
;;;75     	} 
;;;76     	res=ires*NMEA_Pow(10,flen)+fres;
0000ac  4621              MOV      r1,r4
0000ae  200a              MOVS     r0,#0xa
0000b0  f7fffffe          BL       NMEA_Pow
0000b4  fb0a9000          MLA      r0,r10,r0,r9
;;;77     	if(mask&0X02)res=-res;		   
0000b8  07b1              LSLS     r1,r6,#30
0000ba  d500              BPL      |L9.190|
0000bc  4240              RSBS     r0,r0,#0
                  |L9.190|
;;;78     	return res;
;;;79     }	  							 
0000be  e8bd8ff0          POP      {r4-r11,pc}
;;;80     //分析GPGSV信息
                          ENDP


                          AREA ||i.Ublox_CheckSum||, CODE, READONLY, ALIGN=1

                  Ublox_CheckSum PROC
;;;342    //cka,ckb:两个校验结果.
;;;343    void Ublox_CheckSum(u8 *buf,u16 len,u8* cka,u8*ckb)
000000  b570              PUSH     {r4-r6,lr}
;;;344    {
;;;345    	u16 i;
;;;346    	*cka=0;*ckb=0;
000002  2400              MOVS     r4,#0
000004  7014              STRB     r4,[r2,#0]
000006  701c              STRB     r4,[r3,#0]
000008  e008              B        |L10.28|
                  |L10.10|
;;;347    	for(i=0;i<len;i++)
;;;348    	{
;;;349    		*cka=*cka+buf[i];
00000a  7815              LDRB     r5,[r2,#0]
00000c  5d06              LDRB     r6,[r0,r4]
;;;350    		*ckb=*ckb+*cka;
00000e  1c64              ADDS     r4,r4,#1
000010  4435              ADD      r5,r5,r6              ;349
000012  7015              STRB     r5,[r2,#0]            ;349
000014  781e              LDRB     r6,[r3,#0]
000016  b2a4              UXTH     r4,r4                 ;347
000018  4435              ADD      r5,r5,r6
00001a  701d              STRB     r5,[r3,#0]
                  |L10.28|
00001c  428c              CMP      r4,r1                 ;347
00001e  d3f4              BCC      |L10.10|
;;;351    	}
;;;352    }
000020  bd70              POP      {r4-r6,pc}
;;;353    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\src\\HARDWARE\\GPS\\gps.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_gps_c_9617754a____REV16|
#line 114 "..\\..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_gps_c_9617754a____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_gps_c_9617754a____REVSH|
#line 128
|__asm___5_gps_c_9617754a____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
