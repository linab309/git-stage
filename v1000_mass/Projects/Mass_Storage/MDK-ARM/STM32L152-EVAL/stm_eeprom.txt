; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152-eval\stm_eeprom.o --asm_dir=.\STM32L152-EVAL\ --list_dir=.\STM32L152-EVAL\ --depend=.\stm32l152-eval\stm_eeprom.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152_EVAL -I..\src\user -I..\src\user\include -I..\src\SYSTEM\delay -I..\src\SYSTEM\sys -I..\src\SYSTEM\usart -I..\src\HARDWARE\ADC -I..\src\HARDWARE\BMP -I..\src\HARDWARE\DMA -I..\src\HARDWARE\FLASH -I..\src\HARDWARE\GPS -I..\src\HARDWARE\KEY -I..\src\HARDWARE\PWM -I..\src\HARDWARE\RTC -I..\src\HARDWARE\SPI -I..\src\HARDWARE\USART2 -I..\src\HARDWARE\TIMER -I..\src\EX -I..\src\USMART -I..\..\..\Libraries\CMSIS\Include -I..\src\ff11a\src -I..\src\ff11a\src\option -I..\src\HARDWARE\LED -I..\src\HARDWARE\OLED -I..\src\ff11a\src -I..\src\ff11a\src\option -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32L1xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_MD -DUSE_STM32L152_EVAL ..\src\user\stm_eeprom.c]
                          THUMB

                          AREA ||i.stm_EraseWord_Eeprom||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  stm_EraseWord_Eeprom PROC
;;;133    
;;;134    u8 stm_EraseWord_Eeprom(void)
000000  b570              PUSH     {r4-r6,lr}
;;;135    {
;;;136      /*!< At this stage the microcontroller clock setting is already configured, 
;;;137           this is done through SystemInit() function which is called from startup
;;;138           file (startup_stm32l1xx_xx.s) before to branch to application main.
;;;139           To reconfigure the default setting of SystemInit() function, refer to
;;;140           system_stm32l1xx.c file
;;;141         */
;;;142     
;;;143    
;;;144      /* Unlock the FLASH PECR register and Data EEPROM memory */
;;;145      DATA_EEPROM_Unlock();
000002  f7fffffe          BL       DATA_EEPROM_Unlock
;;;146      
;;;147      /* Clear all pending flags */      
;;;148      FLASH_ClearFlag(FLASH_FLAG_EOP|FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR
000006  f6417002          MOV      r0,#0x1f02
00000a  f7fffffe          BL       FLASH_ClearFlag
;;;149                      | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR | FLASH_FLAG_OPTVERRUSR);	
;;;150      
;;;151      /*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by 
;;;152          DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */  
;;;153      Address = DATA_EEPROM_START_ADDR;
00000e  4c14              LDR      r4,|L1.96|
000010  4d12              LDR      r5,|L1.92|
;;;154    
;;;155      NbrOfPage = ((DATA_EEPROM_END_ADDR - Address) + 1 ) >> 2; 
000012  f44f7080          MOV      r0,#0x100
;;;156      
;;;157      /* Erase the Data EEPROM Memory pages by Word (32-bit) */
;;;158      for(j = 0; j < NbrOfPage; j++)
000016  2600              MOVS     r6,#0
000018  60e5              STR      r5,[r4,#0xc]  ; Address
00001a  e9c40601          STRD     r0,r6,[r4,#4]
00001e  bf00              NOP      
                  |L1.32|
000020  e9d41002          LDRD     r1,r0,[r4,#8]
;;;159      {
;;;160        FLASHStatus = DATA_EEPROM_EraseWord(Address + (4 * j));
000024  eb000081          ADD      r0,r0,r1,LSL #2
000028  f7fffffe          BL       DATA_EEPROM_EraseWord
00002c  7020              STRB     r0,[r4,#0]
00002e  68a0              LDR      r0,[r4,#8]            ;158  ; j
000030  1c40              ADDS     r0,r0,#1              ;158
000032  60a0              STR      r0,[r4,#8]            ;158  ; j
000034  6861              LDR      r1,[r4,#4]            ;158  ; NbrOfPage
000036  4288              CMP      r0,r1                 ;158
000038  d3f2              BCC      |L1.32|
;;;161      }
;;;162       
;;;163      /* Check the correctness of written data */
;;;164      while(Address < DATA_EEPROM_END_ADDR)
00003a  490a              LDR      r1,|L1.100|
00003c  68e0              LDR      r0,[r4,#0xc]  ; Address
                  |L1.62|
00003e  4288              CMP      r0,r1
000040  d205              BCS      |L1.78|
;;;165      {
;;;166        if(*(__IO uint32_t*)Address != 0x0)
000042  6802              LDR      r2,[r0,#0]
000044  b102              CBZ      r2,|L1.72|
;;;167        {
;;;168          DataMemoryProgramStatus = FAILED;
000046  7066              STRB     r6,[r4,#1]
                  |L1.72|
000048  1d00              ADDS     r0,r0,#4
;;;169        }
;;;170        Address = Address + 4;
00004a  60e0              STR      r0,[r4,#0xc]  ; Address
00004c  e7f7              B        |L1.62|
                  |L1.78|
;;;171      }
;;;172       v1000_debug("\n\r stm_EraseWord_Eeprom    :%d",DataMemoryProgramStatus);
00004e  7861              LDRB     r1,[r4,#1]  ; DataMemoryProgramStatus
000050  a005              ADR      r0,|L1.104|
000052  f7fffffe          BL       __2printf
;;;173       
;;;174       Address = DATA_EEPROM_START_ADDR;
;;;175      return DataMemoryProgramStatus;
000056  60e5              STR      r5,[r4,#0xc]  ; Address
000058  7860              LDRB     r0,[r4,#1]  ; DataMemoryProgramStatus
;;;176    }
00005a  bd70              POP      {r4-r6,pc}
;;;177    
                          ENDP

                  |L1.92|
                          DCD      0x08080000
                  |L1.96|
                          DCD      ||.data||
                  |L1.100|
                          DCD      0x080803ff
                  |L1.104|
000068  0a0d2073          DCB      "\n\r stm_EraseWord_Eeprom    :%d",0
00006c  746d5f45
000070  72617365
000074  576f7264
000078  5f456570
00007c  726f6d20
000080  2020203a
000084  256400  
000087  00                DCB      0

                          AREA ||i.stm_fast_write_eerpom||, CODE, READONLY, ALIGN=2

                  stm_fast_write_eerpom PROC
;;;100    
;;;101    void stm_fast_write_eerpom(u8 address,u32 data)
000000  b570              PUSH     {r4-r6,lr}
;;;102    {
000002  460d              MOV      r5,r1
000004  4606              MOV      r6,r0
;;;103        DATA_EEPROM_Unlock();
000006  f7fffffe          BL       DATA_EEPROM_Unlock
;;;104    
;;;105        /* Clear all pending flags */      
;;;106        FLASH_ClearFlag(FLASH_FLAG_EOP|FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR
00000a  f6417002          MOV      r0,#0x1f02
00000e  f7fffffe          BL       FLASH_ClearFlag
;;;107                      | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR | FLASH_FLAG_OPTVERRUSR);
;;;108        Address += (4*address);
000012  4c0a              LDR      r4,|L2.60|
000014  68e0              LDR      r0,[r4,#0xc]  ; Address
000016  eb000086          ADD      r0,r0,r6,LSL #2
;;;109        while(1)
;;;110     	{
;;;111    		FLASHStatus = DATA_EEPROM_FastProgramWord(Address, data);
;;;112    
;;;113    		if(FLASHStatus == FLASH_COMPLETE)
;;;114    			{
;;;115    					break;
;;;116    			}
;;;117    		else
;;;118    			{
;;;119    			FLASH_ClearFlag(FLASH_FLAG_EOP|FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR
00001a  f6407602          MOV      r6,#0xf02
00001e  60e0              STR      r0,[r4,#0xc]  ; Address
                  |L2.32|
000020  4629              MOV      r1,r5                 ;111
000022  68e0              LDR      r0,[r4,#0xc]          ;111  ; Address
000024  f7fffffe          BL       DATA_EEPROM_FastProgramWord
000028  7020              STRB     r0,[r4,#0]            ;111
00002a  7820              LDRB     r0,[r4,#0]            ;113  ; FLASHStatus
00002c  2804              CMP      r0,#4                 ;113
00002e  d003              BEQ      |L2.56|
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       FLASH_ClearFlag
000036  e7f3              B        |L2.32|
                  |L2.56|
;;;120    		               | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR);
;;;121    			}
;;;122     	}
;;;123    
;;;124    //DATA_EEPROM_Lock();
;;;125    	
;;;126    }
000038  bd70              POP      {r4-r6,pc}
;;;127    void stm_read_eerpom(u32 address,u32 *data)
                          ENDP

00003a  0000              DCW      0x0000
                  |L2.60|
                          DCD      ||.data||

                          AREA ||i.stm_read_eerpom||, CODE, READONLY, ALIGN=2

                  stm_read_eerpom PROC
;;;126    }
;;;127    void stm_read_eerpom(u32 address,u32 *data)
000000  4b03              LDR      r3,|L3.16|
;;;128    {
;;;129        Address = DATA_EEPROM_START_ADDR;
000002  4a04              LDR      r2,|L3.20|
;;;130        Address += (4*address);
000004  eb030080          ADD      r0,r3,r0,LSL #2
;;;131        *data = *(__IO uint32_t*)Address;
000008  60d0              STR      r0,[r2,#0xc]  ; Address
00000a  6800              LDR      r0,[r0,#0]
00000c  6008              STR      r0,[r1,#0]
;;;132    }
00000e  4770              BX       lr
;;;133    
                          ENDP

                  |L3.16|
                          DCD      0x08080000
                  |L3.20|
                          DCD      ||.data||

                          AREA ||i.stm_write_eerpom||, CODE, READONLY, ALIGN=2

                  stm_write_eerpom PROC
;;;71     
;;;72     void stm_write_eerpom(u16 address,u32 data)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;73     {
000004  460f              MOV      r7,r1
000006  4606              MOV      r6,r0
;;;74         DATA_EEPROM_Unlock();
000008  f7fffffe          BL       DATA_EEPROM_Unlock
;;;75     
;;;76         /* Clear all pending flags */      
;;;77         FLASH_ClearFlag(FLASH_FLAG_EOP|FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR
00000c  f6417002          MOV      r0,#0x1f02
000010  f7fffffe          BL       FLASH_ClearFlag
;;;78                       | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR | FLASH_FLAG_OPTVERRUSR);
;;;79         Address = DATA_EEPROM_START_ADDR;
000014  4d0a              LDR      r5,|L4.64|
000016  4c0b              LDR      r4,|L4.68|
;;;80         Address += (4*address);
000018  eb050086          ADD      r0,r5,r6,LSL #2
;;;81         while(1)
;;;82         	{
;;;83         	FLASHStatus = DATA_EEPROM_ProgramWord(Address, data);
;;;84     
;;;85         	if(FLASHStatus == FLASH_COMPLETE)
;;;86         		{
;;;87         				break;
;;;88         		}
;;;89         	else
;;;90         		{
;;;91         		FLASH_ClearFlag(FLASH_FLAG_EOP|FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR
00001c  f6407602          MOV      r6,#0xf02
000020  60e0              STR      r0,[r4,#0xc]  ; Address
                  |L4.34|
000022  4639              MOV      r1,r7                 ;83
000024  68e0              LDR      r0,[r4,#0xc]          ;83  ; Address
000026  f7fffffe          BL       DATA_EEPROM_ProgramWord
00002a  7020              STRB     r0,[r4,#0]            ;83
00002c  7820              LDRB     r0,[r4,#0]            ;85  ; FLASHStatus
00002e  2804              CMP      r0,#4                 ;85
000030  d003              BEQ      |L4.58|
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       FLASH_ClearFlag
000038  e7f3              B        |L4.34|
                  |L4.58|
;;;92         	               | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR);
;;;93         		}
;;;94         	}
;;;95         Address = DATA_EEPROM_START_ADDR;
00003a  60e5              STR      r5,[r4,#0xc]  ; Address
;;;96     //DATA_EEPROM_Lock();
;;;97     	
;;;98     }
00003c  e8bd81f0          POP      {r4-r8,pc}
;;;99     
                          ENDP

                  |L4.64|
                          DCD      0x08080000
                  |L4.68|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  FLASHStatus
000000  04                DCB      0x04
                  DataMemoryProgramStatus
000001  010000            DCB      0x01,0x00,0x00
                  NbrOfPage
                          DCD      0x00000000
                  j
                          DCD      0x00000000
                  Address
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\src\\user\\stm_eeprom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_stm_eeprom_c_79369c98____REV16|
#line 114 "..\\..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_stm_eeprom_c_79369c98____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_stm_eeprom_c_79369c98____REVSH|
#line 128
|__asm___12_stm_eeprom_c_79369c98____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
