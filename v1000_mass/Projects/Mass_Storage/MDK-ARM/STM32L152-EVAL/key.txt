; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152-eval\key.o --asm_dir=.\STM32L152-EVAL\ --list_dir=.\STM32L152-EVAL\ --depend=.\stm32l152-eval\key.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152_EVAL -I..\src\user -I..\src\user\include -I..\src\SYSTEM\delay -I..\src\SYSTEM\sys -I..\src\SYSTEM\usart -I..\src\HARDWARE\ADC -I..\src\HARDWARE\BMP -I..\src\HARDWARE\DMA -I..\src\HARDWARE\FLASH -I..\src\HARDWARE\GPS -I..\src\HARDWARE\KEY -I..\src\HARDWARE\PWM -I..\src\HARDWARE\RTC -I..\src\HARDWARE\SPI -I..\src\HARDWARE\USART2 -I..\src\HARDWARE\TIMER -I..\src\EX -I..\src\USMART -I..\..\..\Libraries\CMSIS\Include -I..\src\ff11a\src -I..\src\ff11a\src\option -I..\src\HARDWARE\LED -I..\src\HARDWARE\OLED -I..\src\ff11a\src -I..\src\ff11a\src\option -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32L1xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_MD -DUSE_STM32L152_EVAL ..\src\HARDWARE\KEY\key.c]
                          THUMB

                          AREA ||i.KEY_Init||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;21      u8 key_press_cnt = 0;
;;;22     void KEY_Init(void) //IO初始化
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;23     {
;;;24     	GPIO_InitTypeDef GPIO_InitStructure;
;;;25     	EXTI_InitTypeDef EXTI_InitStructure;
;;;26     	NVIC_InitTypeDef NVIC_InitStructure;
;;;27     #if 1
;;;28     
;;;29     	//init GPIOA.13,GPIOA.15  上拉输入
;;;30      	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA,ENABLE);
000004  2101              MOVS     r1,#1
000006  b085              SUB      sp,sp,#0x14           ;23
000008  4608              MOV      r0,r1
00000a  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;31      	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC,ENABLE);
00000e  2101              MOVS     r1,#1
000010  2004              MOVS     r0,#4
000012  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;32     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_15;
000016  f44f4000          MOV      r0,#0x8000
;;;33     //	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_15;
;;;34     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00001a  2500              MOVS     r5,#0
;;;35     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
;;;36      	GPIO_Init(GPIOA, &GPIO_InitStructure);
00001c  f8df90f0          LDR      r9,|L1.272|
000020  9000              STR      r0,[sp,#0]            ;34
000022  f88d5004          STRB     r5,[sp,#4]            ;34
000026  2602              MOVS     r6,#2                 ;35
000028  f88d6007          STRB     r6,[sp,#7]            ;35
00002c  4669              MOV      r1,sp
00002e  4648              MOV      r0,r9
000030  f7fffffe          BL       GPIO_Init
;;;37     
;;;38     
;;;39     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_13;
000034  0337              LSLS     r7,r6,#12
;;;40     //	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_15;
;;;41     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
000036  f88d5004          STRB     r5,[sp,#4]
;;;42     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
00003a  2401              MOVS     r4,#1
00003c  9700              STR      r7,[sp,#0]            ;41
00003e  f88d4007          STRB     r4,[sp,#7]
;;;43      	GPIO_Init(GPIOA, &GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       GPIO_Init
;;;44     
;;;45     
;;;46       /* Enable SYSCFG clock */
;;;47     	  RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
00004a  2101              MOVS     r1,#1
00004c  4608              MOV      r0,r1
00004e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;48     
;;;49      	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC,ENABLE);
000052  2101              MOVS     r1,#1
000054  2004              MOVS     r0,#4
000056  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;50     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_13;
;;;51     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
;;;52     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
;;;53      	GPIO_Init(GPIOC, &GPIO_InitStructure);
00005a  f8df80b8          LDR      r8,|L1.276|
00005e  f88d5004          STRB     r5,[sp,#4]            ;51
000062  9700              STR      r7,[sp,#0]            ;51
000064  f88d6007          STRB     r6,[sp,#7]            ;52
000068  4669              MOV      r1,sp
00006a  4640              MOV      r0,r8
00006c  f7fffffe          BL       GPIO_Init
;;;54     
;;;55     
;;;56           /* Connect PC13 to RTC_AF1 */
;;;57             GPIO_PinAFConfig(GPIOC, GPIO_PinSource13, GPIO_AF_WKUP);
000070  2200              MOVS     r2,#0
000072  210d              MOVS     r1,#0xd
000074  4640              MOV      r0,r8
000076  f7fffffe          BL       GPIO_PinAFConfig
;;;58     	/* Select User Button pin as input source for EXTI Line */
;;;59     	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOC,EXTI_PinSource13);
00007a  210d              MOVS     r1,#0xd
00007c  2002              MOVS     r0,#2
00007e  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;60     
;;;61     	/* Configure EXT1 Line 0 in interrupt mode trigged on Rising edge */
;;;62     	EXTI_InitStructure.EXTI_Line = EXTI_Line13 ;  // Pc13 for User button AND IDD_WakeUP
;;;63     	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
000082  9702              STR      r7,[sp,#8]
000084  f88d500c          STRB     r5,[sp,#0xc]
;;;64     	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  
000088  2708              MOVS     r7,#8
00008a  f88d700d          STRB     r7,[sp,#0xd]
;;;65     	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
00008e  f88d400e          STRB     r4,[sp,#0xe]
;;;66     	EXTI_Init(&EXTI_InitStructure);
000092  a802              ADD      r0,sp,#8
000094  f7fffffe          BL       EXTI_Init
;;;67     
;;;68     	/* Enable and set EXTI0 Interrupt to the lowest priority */
;;;69     	NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn ;
000098  2028              MOVS     r0,#0x28
00009a  f88d0010          STRB     r0,[sp,#0x10]
;;;70     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0;
00009e  f88d5011          STRB     r5,[sp,#0x11]
;;;71     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x1;
0000a2  f88d4012          STRB     r4,[sp,#0x12]
;;;72     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0000a6  f88d4013          STRB     r4,[sp,#0x13]
;;;73     	NVIC_Init(&NVIC_InitStructure); 
0000aa  a804              ADD      r0,sp,#0x10
0000ac  f7fffffe          BL       NVIC_Init
;;;74     #endif	
;;;75     
;;;76     
;;;77     #if 1
;;;78      	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA,ENABLE);
0000b0  2101              MOVS     r1,#1
0000b2  4608              MOV      r0,r1
0000b4  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;79     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;
;;;80     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
0000b8  f88d5004          STRB     r5,[sp,#4]
0000bc  9400              STR      r4,[sp,#0]
;;;81     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
0000be  f88d6007          STRB     r6,[sp,#7]
;;;82      	GPIO_Init(GPIOA, &GPIO_InitStructure);
0000c2  4669              MOV      r1,sp
0000c4  4648              MOV      r0,r9
0000c6  f7fffffe          BL       GPIO_Init
;;;83     
;;;84           /* Connect PC13 to RTC_AF1 */
;;;85           GPIO_PinAFConfig(GPIOA, GPIO_PinSource0, GPIO_AF_WKUP);
0000ca  2200              MOVS     r2,#0
0000cc  4611              MOV      r1,r2
0000ce  4648              MOV      r0,r9
0000d0  f7fffffe          BL       GPIO_PinAFConfig
;;;86     	/* Select User Button pin as input source for EXTI Line */
;;;87     	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA,EXTI_PinSource0);
0000d4  2100              MOVS     r1,#0
0000d6  4608              MOV      r0,r1
0000d8  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;88     
;;;89     	/* Configure EXT1 Line 0 in interrupt mode trigged on Rising edge */
;;;90     	EXTI_InitStructure.EXTI_Line = EXTI_Line0 ;  // Pc13 for User button AND IDD_WakeUP
;;;91     	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
0000dc  f88d500c          STRB     r5,[sp,#0xc]
;;;92     	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  
0000e0  f88d700d          STRB     r7,[sp,#0xd]
0000e4  9402              STR      r4,[sp,#8]            ;91
;;;93     	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
0000e6  f88d400e          STRB     r4,[sp,#0xe]
;;;94     	EXTI_Init(&EXTI_InitStructure);
0000ea  a802              ADD      r0,sp,#8
0000ec  f7fffffe          BL       EXTI_Init
;;;95     
;;;96     	/* Enable and set EXTI0 Interrupt to the lowest priority */
;;;97     	NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn ;
0000f0  2006              MOVS     r0,#6
0000f2  f88d0010          STRB     r0,[sp,#0x10]
;;;98     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0;
0000f6  f88d5011          STRB     r5,[sp,#0x11]
;;;99     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x1;
0000fa  f88d4012          STRB     r4,[sp,#0x12]
;;;100    	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0000fe  f88d4013          STRB     r4,[sp,#0x13]
;;;101    	NVIC_Init(&NVIC_InitStructure); 
000102  a804              ADD      r0,sp,#0x10
000104  f7fffffe          BL       NVIC_Init
;;;102    #endif
;;;103      
;;;104    }
000108  b005              ADD      sp,sp,#0x14
00010a  e8bd83f0          POP      {r4-r9,pc}
;;;105    
                          ENDP

00010e  0000              DCW      0x0000
                  |L1.272|
                          DCD      0x40020000
                  |L1.276|
                          DCD      0x40020800

                          AREA ||i.KEY_Scan||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  KEY_Scan PROC
;;;108    
;;;109    u8 KEY_Scan(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;110    {	 
;;;111    	static u8 key_up=1;//按键按松开标志
;;;112    
;;;113    	static u8 key_press_statby_cnt = 0;
;;;114    	static u8 key_press_vaule = 0xff;
;;;115    	extern u8 menu_setting_index ;
;;;116    //       u8 key_reachnumber = 0;
;;;117    // 	GPIO_PinRemapConfig(GPIO_Remap_SWJ_Disable, ENABLE);
;;;118    	JTAG_Set(0);
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       JTAG_Set
;;;119    	if(key_up&&(KEY0==1||KEY1==0||KEY2==1))
00000a  4c6e              LDR      r4,|L2.452|
;;;120    	{
;;;121    	//	delay_ms(10);//去抖动 
;;;122    		key_up=0;
;;;123    		key_press_statby_cnt = 0;
;;;124    		if(KEY0==1)
;;;125    		{
;;;126    	 
;;;127    	//		 GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
;;;128    		//	JTAG_Set(1);
;;;129    			 key_press_vaule  = 1;	
00000c  2201              MOVS     r2,#1
00000e  496e              LDR      r1,|L2.456|
000010  7863              LDRB     r3,[r4,#1]            ;119  ; key_up
000012  486e              LDR      r0,|L2.460|
000014  2600              MOVS     r6,#0                 ;119
000016  b153              CBZ      r3,|L2.46|
000018  f8d0523c          LDR      r5,[r0,#0x23c]        ;119
00001c  2d01              CMP      r5,#1                 ;119
00001e  d00b              BEQ      |L2.56|
000020  f8d05234          LDR      r5,[r0,#0x234]        ;119
000024  b145              CBZ      r5,|L2.56|
000026  f8d15234          LDR      r5,[r1,#0x234]        ;119
00002a  2d01              CMP      r5,#1                 ;119
00002c  d004              BEQ      |L2.56|
                  |L2.46|
;;;130    	//		return 1;
;;;131    		}
;;;132    		else if(KEY1==0)
;;;133    		{
;;;134    			JTAG_Set(1);	 	 
;;;135    	   //  /	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
;;;136    			   key_press_vaule  = 2;	
;;;137    		//	return 2;
;;;138    		}
;;;139    		#if 1
;;;140    		else if(KEY2==1)
;;;141    		{
;;;142    			JTAG_Set(1);	 	 
;;;143    	   //  /	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
;;;144    		//	return 1;
;;;145    		key_press_vaule  = 3;
;;;146    	    	//GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
;;;147    			
;;;148    		}
;;;149    		#endif
;;;150    	}
;;;151    	else if(KEY0==0&&KEY1==1&&KEY2==0)
00002e  f8d0723c          LDR      r7,[r0,#0x23c]
;;;152    		{
;;;153    		key_up=1; 	    
;;;154    		key_press_cnt = 0;
;;;155    		key_press_statby_cnt = 0; 
;;;156    		if(key_press_vaule == 1)
;;;157    			{
;;;158    			key_press_vaule = 0xff;
000032  25ff              MOVS     r5,#0xff
000034  b1df              CBZ      r7,|L2.110|
000036  e021              B        |L2.124|
                  |L2.56|
000038  7066              STRB     r6,[r4,#1]            ;122
00003a  70a6              STRB     r6,[r4,#2]            ;123
00003c  f8d0323c          LDR      r3,[r0,#0x23c]        ;124
000040  2b01              CMP      r3,#1                 ;124
000042  d007              BEQ      |L2.84|
000044  f8d00234          LDR      r0,[r0,#0x234]        ;132
000048  b130              CBZ      r0,|L2.88|
00004a  f8d10234          LDR      r0,[r1,#0x234]        ;140
00004e  2801              CMP      r0,#1                 ;140
000050  d007              BEQ      |L2.98|
000052  e0a6              B        |L2.418|
                  |L2.84|
000054  70e2              STRB     r2,[r4,#3]            ;129
000056  e0a4              B        |L2.418|
                  |L2.88|
000058  2001              MOVS     r0,#1                 ;134
00005a  f7fffffe          BL       JTAG_Set
00005e  2002              MOVS     r0,#2                 ;136
000060  e003              B        |L2.106|
                  |L2.98|
000062  2001              MOVS     r0,#1                 ;142
000064  f7fffffe          BL       JTAG_Set
000068  2003              MOVS     r0,#3                 ;145
                  |L2.106|
00006a  70e0              STRB     r0,[r4,#3]            ;145
00006c  e099              B        |L2.418|
                  |L2.110|
00006e  f8d07234          LDR      r7,[r0,#0x234]        ;151
000072  2f01              CMP      r7,#1                 ;151
000074  d102              BNE      |L2.124|
000076  f8d17234          LDR      r7,[r1,#0x234]        ;151
00007a  b10f              CBZ      r7,|L2.128|
                  |L2.124|
;;;159    			JTAG_Set(1);
;;;160    			return 3;
;;;161    			}
;;;162    		else if (key_press_vaule == 2)
;;;163    			{
;;;164    			key_press_vaule = 0xff;
;;;165    			JTAG_Set(1);
;;;166    			return 2;
;;;167    
;;;168    			}
;;;169    		else if (key_press_vaule == 3)
;;;170    			{
;;;171    			key_press_vaule = 0xff;
;;;172    			JTAG_Set(1);
;;;173    			return 1;
;;;174    
;;;175    			}
;;;176    
;;;177    		}
;;;178    	else if(key_up == 0)
00007c  b1b3              CBZ      r3,|L2.172|
00007e  e090              B        |L2.418|
                  |L2.128|
000080  7062              STRB     r2,[r4,#1]            ;153
000082  7026              STRB     r6,[r4,#0]            ;154
000084  70a6              STRB     r6,[r4,#2]            ;155
000086  78e0              LDRB     r0,[r4,#3]            ;156  ; key_press_vaule
000088  2801              CMP      r0,#1                 ;156
00008a  d004              BEQ      |L2.150|
00008c  2802              CMP      r0,#2                 ;162
00008e  d009              BEQ      |L2.164|
000090  2803              CMP      r0,#3                 ;169
000092  d009              BEQ      |L2.168|
000094  e085              B        |L2.418|
                  |L2.150|
000096  70e5              STRB     r5,[r4,#3]            ;158
000098  2001              MOVS     r0,#1                 ;159
00009a  f7fffffe          BL       JTAG_Set
00009e  2003              MOVS     r0,#3                 ;160
                  |L2.160|
;;;179    		{
;;;180    		if((KEY1==0)&&(KEY0 == 1)&&KEY2==1)
;;;181    			{
;;;182    
;;;183    			#if 1
;;;184    			v1000_debug("\n\r key_press_statby_cnt :%d",key_press_statby_cnt);
;;;185                       key_press_cnt = 0;
;;;186    			if(system_power_flag == SYSTEM_POWER_STANBY)
;;;187    				{
;;;188    					if(key_press_statby_cnt < 75)
;;;189    					key_press_statby_cnt++;
;;;190    
;;;191    					if(key_press_statby_cnt == 75)
;;;192    					{
;;;193    					key_press_vaule = 0xff;
;;;194    					key_press_statby_cnt = 76;
;;;195    					JTAG_Set(1);
;;;196    					return 6;
;;;197    					}
;;;198    				}
;;;199    			else
;;;200    				{
;;;201    					if(key_press_statby_cnt < 50)
;;;202    					key_press_statby_cnt++;
;;;203    
;;;204    					if(key_press_statby_cnt == 50)
;;;205    					{
;;;206    					key_press_vaule = 0xff;
;;;207    					key_press_statby_cnt = 51;
;;;208    					JTAG_Set(1);
;;;209    					return 6;
;;;210    					}
;;;211    
;;;212    				}
;;;213    			#endif
;;;214    			}
;;;215    		else
;;;216    			{
;;;217    			key_press_statby_cnt = 0;
;;;218    		 if(KEY0 == 1)
;;;219    		 	{
;;;220    			if(key_press_cnt < 25)
;;;221    			 	key_press_cnt++;
;;;222    			if(key_press_cnt == 25)
;;;223    				{
;;;224    				key_press_vaule = 0xff;
;;;225    				key_press_cnt = 51;
;;;226    				JTAG_Set(1);
;;;227    				return 4;
;;;228    				}
;;;229    		 	}
;;;230    		 else if(KEY1 == 0)
;;;231    
;;;232    		 	{
;;;233    		 //	if((KeyTab[keyTabIndex].subnumber == 'S'))
;;;234    			 	key_press_cnt++;
;;;235    			if(menu_setting_index!=0xff)
;;;236    				{
;;;237    				if(key_press_cnt >= 10)
;;;238    					{
;;;239    					key_press_vaule = 0xff;
;;;240    					key_press_cnt = 11;
;;;241    					JTAG_Set(1);
;;;242    					return 2;
;;;243    					}
;;;244    				}
;;;245    			else
;;;246    				{
;;;247    					if(key_press_cnt == 25)						
;;;248    						{
;;;249    						key_press_vaule = 0xff;
;;;250    						key_press_cnt = 26;
;;;251    						JTAG_Set(1);
;;;252    					//	system_flag_table->usb_standy_poweron_flag = 0;
;;;253    						return 7;
;;;254    						}
;;;255    				}
;;;256    		 	}
;;;257    		 else if(KEY2 == 1)		 
;;;258    		 	{
;;;259    
;;;260    			 key_press_cnt++;
;;;261    		 	if(menu_setting_index!=0xff)
;;;262    		 		{
;;;263    					if(key_press_cnt >= 10)
;;;264    						{
;;;265    						key_press_vaule = 0xff;
;;;266    						key_press_cnt = 11;
;;;267    						JTAG_Set(1);
;;;268    						return 1;
;;;269    						}
;;;270    		 		}
;;;271    			else
;;;272    				{
;;;273    				#if 0
;;;274    				if(system_power_flag == SYSTEM_POWER_STANBY)
;;;275    					key_reachnumber = 50;
;;;276    				else
;;;277    					key_reachnumber = 25;
;;;278    				#endif
;;;279    					if(key_press_cnt == 25)						
;;;280    					{
;;;281    						key_press_vaule = 0xff;
;;;282    						key_press_cnt = 26;
;;;283    						JTAG_Set(1);
;;;284    						system_flag_table->usb_standy_poweron_flag = 0;
;;;285    						return 5;
;;;286    					}	
;;;287    				}
;;;288    		 	}
;;;289    			}
;;;290    
;;;291    		}
;;;292    		
;;;293     		JTAG_Set(1);
;;;294     //	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
;;;295    	return 0;// 无按键按下
;;;296    }
0000a0  e8bd81f0          POP      {r4-r8,pc}
                  |L2.164|
0000a4  70e5              STRB     r5,[r4,#3]            ;164
0000a6  e05c              B        |L2.354|
                  |L2.168|
0000a8  70e5              STRB     r5,[r4,#3]            ;171
0000aa  e073              B        |L2.404|
                  |L2.172|
0000ac  f8d02234          LDR      r2,[r0,#0x234]        ;180
0000b0  2733              MOVS     r7,#0x33              ;207
0000b2  b93a              CBNZ     r2,|L2.196|
0000b4  f8d0223c          LDR      r2,[r0,#0x23c]        ;180
0000b8  2a01              CMP      r2,#1                 ;180
0000ba  d103              BNE      |L2.196|
0000bc  f8d12234          LDR      r2,[r1,#0x234]        ;180
0000c0  2a01              CMP      r2,#1                 ;180
0000c2  d00f              BEQ      |L2.228|
                  |L2.196|
0000c4  70a6              STRB     r6,[r4,#2]            ;217
0000c6  f8d0223c          LDR      r2,[r0,#0x23c]        ;218
0000ca  2a01              CMP      r2,#1                 ;218
0000cc  d02e              BEQ      |L2.300|
0000ce  f8d07234          LDR      r7,[r0,#0x234]        ;230
0000d2  4b3f              LDR      r3,|L2.464|
0000d4  200b              MOVS     r0,#0xb               ;240
0000d6  221a              MOVS     r2,#0x1a              ;250
0000d8  b3bf              CBZ      r7,|L2.330|
0000da  f8d11234          LDR      r1,[r1,#0x234]        ;257
0000de  2901              CMP      r1,#1                 ;257
0000e0  d04d              BEQ      |L2.382|
0000e2  e05e              B        |L2.418|
                  |L2.228|
0000e4  78a1              LDRB     r1,[r4,#2]            ;184  ; key_press_statby_cnt
0000e6  a03b              ADR      r0,|L2.468|
0000e8  f7fffffe          BL       __2printf
0000ec  4840              LDR      r0,|L2.496|
0000ee  7026              STRB     r6,[r4,#0]            ;185
0000f0  7800              LDRB     r0,[r0,#0]            ;186  ; system_power_flag
0000f2  2800              CMP      r0,#0                 ;186
0000f4  78a0              LDRB     r0,[r4,#2]            ;201  ; key_press_statby_cnt
0000f6  d007              BEQ      |L2.264|
0000f8  2832              CMP      r0,#0x32              ;201
0000fa  d201              BCS      |L2.256|
0000fc  1c40              ADDS     r0,r0,#1              ;201
0000fe  70a0              STRB     r0,[r4,#2]            ;202
                  |L2.256|
000100  b2c0              UXTB     r0,r0                 ;204
000102  2832              CMP      r0,#0x32              ;204
000104  d00b              BEQ      |L2.286|
000106  e04c              B        |L2.418|
                  |L2.264|
000108  284b              CMP      r0,#0x4b              ;188
00010a  d201              BCS      |L2.272|
00010c  1c40              ADDS     r0,r0,#1              ;188
00010e  70a0              STRB     r0,[r4,#2]            ;189
                  |L2.272|
000110  b2c0              UXTB     r0,r0                 ;191
000112  284b              CMP      r0,#0x4b              ;191
000114  d145              BNE      |L2.418|
000116  70e5              STRB     r5,[r4,#3]            ;193
000118  204c              MOVS     r0,#0x4c              ;194
00011a  70a0              STRB     r0,[r4,#2]            ;194
00011c  e001              B        |L2.290|
                  |L2.286|
00011e  70e5              STRB     r5,[r4,#3]            ;206
000120  70a7              STRB     r7,[r4,#2]            ;207
                  |L2.290|
000122  2001              MOVS     r0,#1                 ;208
000124  f7fffffe          BL       JTAG_Set
000128  2006              MOVS     r0,#6                 ;209
00012a  e7b9              B        |L2.160|
                  |L2.300|
00012c  7820              LDRB     r0,[r4,#0]            ;220  ; key_press_cnt
00012e  2819              CMP      r0,#0x19              ;220
000130  d201              BCS      |L2.310|
000132  1c40              ADDS     r0,r0,#1              ;220
000134  7020              STRB     r0,[r4,#0]            ;221
                  |L2.310|
000136  b2c0              UXTB     r0,r0                 ;222
000138  2819              CMP      r0,#0x19              ;222
00013a  d132              BNE      |L2.418|
00013c  70e5              STRB     r5,[r4,#3]            ;224
00013e  7027              STRB     r7,[r4,#0]            ;225
000140  2001              MOVS     r0,#1                 ;226
000142  f7fffffe          BL       JTAG_Set
000146  2004              MOVS     r0,#4                 ;227
000148  e7aa              B        |L2.160|
                  |L2.330|
00014a  e7ff              B        |L2.332|
                  |L2.332|
00014c  7821              LDRB     r1,[r4,#0]            ;234  ; key_press_cnt
00014e  1c49              ADDS     r1,r1,#1              ;234
000150  b2c9              UXTB     r1,r1                 ;234
000152  7021              STRB     r1,[r4,#0]            ;234
000154  781b              LDRB     r3,[r3,#0]            ;235  ; menu_setting_index
000156  2bff              CMP      r3,#0xff              ;235
000158  d008              BEQ      |L2.364|
00015a  290a              CMP      r1,#0xa               ;237
00015c  d321              BCC      |L2.418|
00015e  70e5              STRB     r5,[r4,#3]            ;239
000160  7020              STRB     r0,[r4,#0]            ;240
                  |L2.354|
000162  2001              MOVS     r0,#1                 ;241
000164  f7fffffe          BL       JTAG_Set
000168  2002              MOVS     r0,#2                 ;242
00016a  e799              B        |L2.160|
                  |L2.364|
00016c  2919              CMP      r1,#0x19              ;247
00016e  d118              BNE      |L2.418|
000170  70e5              STRB     r5,[r4,#3]            ;249
000172  7022              STRB     r2,[r4,#0]            ;250
000174  2001              MOVS     r0,#1                 ;251
000176  f7fffffe          BL       JTAG_Set
00017a  2007              MOVS     r0,#7                 ;253
00017c  e790              B        |L2.160|
                  |L2.382|
00017e  7821              LDRB     r1,[r4,#0]            ;260  ; key_press_cnt
000180  1c49              ADDS     r1,r1,#1              ;260
000182  b2c9              UXTB     r1,r1                 ;260
000184  7021              STRB     r1,[r4,#0]            ;260
000186  781b              LDRB     r3,[r3,#0]            ;261  ; menu_setting_index
000188  2bff              CMP      r3,#0xff              ;261
00018a  d008              BEQ      |L2.414|
00018c  290a              CMP      r1,#0xa               ;263
00018e  d308              BCC      |L2.418|
000190  70e5              STRB     r5,[r4,#3]            ;265
000192  7020              STRB     r0,[r4,#0]            ;266
                  |L2.404|
000194  2001              MOVS     r0,#1                 ;267
000196  f7fffffe          BL       JTAG_Set
00019a  2001              MOVS     r0,#1                 ;268
00019c  e780              B        |L2.160|
                  |L2.414|
00019e  2919              CMP      r1,#0x19              ;279
0001a0  d004              BEQ      |L2.428|
                  |L2.418|
0001a2  2001              MOVS     r0,#1                 ;293
0001a4  f7fffffe          BL       JTAG_Set
0001a8  2000              MOVS     r0,#0                 ;295
0001aa  e779              B        |L2.160|
                  |L2.428|
0001ac  70e5              STRB     r5,[r4,#3]            ;281
0001ae  7022              STRB     r2,[r4,#0]            ;282
0001b0  2001              MOVS     r0,#1                 ;283
0001b2  f7fffffe          BL       JTAG_Set
0001b6  480f              LDR      r0,|L2.500|
0001b8  6800              LDR      r0,[r0,#0]            ;284  ; system_flag_table
0001ba  f8806033          STRB     r6,[r0,#0x33]         ;284
0001be  2005              MOVS     r0,#5                 ;285
0001c0  e76e              B        |L2.160|
;;;297    
                          ENDP

0001c2  0000              DCW      0x0000
                  |L2.452|
                          DCD      ||.data||
                  |L2.456|
                          DCD      0x42410000
                  |L2.460|
                          DCD      0x42400000
                  |L2.464|
                          DCD      menu_setting_index
                  |L2.468|
0001d4  0a0d206b          DCB      "\n\r key_press_statby_cnt :%d",0
0001d8  65795f70
0001dc  72657373
0001e0  5f737461
0001e4  7462795f
0001e8  636e7420
0001ec  3a256400
                  |L2.496|
                          DCD      system_power_flag
                  |L2.500|
                          DCD      system_flag_table

                          AREA ||.data||, DATA, ALIGN=0

                  key_press_cnt
000000  00                DCB      0x00
                  key_up
000001  01                DCB      0x01
                  key_press_statby_cnt
000002  00                DCB      0x00
                  key_press_vaule
000003  ff                DCB      0xff

;*** Start embedded assembler ***

#line 1 "..\\src\\HARDWARE\\KEY\\key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_1abac35f____REV16|
#line 114 "..\\..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_key_c_1abac35f____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_1abac35f____REVSH|
#line 128
|__asm___5_key_c_1abac35f____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
