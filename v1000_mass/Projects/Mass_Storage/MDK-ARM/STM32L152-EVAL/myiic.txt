; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152-eval\myiic.o --asm_dir=.\STM32L152-EVAL\ --list_dir=.\STM32L152-EVAL\ --depend=.\stm32l152-eval\myiic.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152_EVAL -I..\src\user -I..\src\user\include -I..\src\SYSTEM\delay -I..\src\SYSTEM\sys -I..\src\SYSTEM\usart -I..\src\HARDWARE\ADC -I..\src\HARDWARE\BMP -I..\src\HARDWARE\DMA -I..\src\HARDWARE\FLASH -I..\src\HARDWARE\GPS -I..\src\HARDWARE\KEY -I..\src\HARDWARE\PWM -I..\src\HARDWARE\RTC -I..\src\HARDWARE\SPI -I..\src\HARDWARE\USART2 -I..\src\HARDWARE\TIMER -I..\src\EX -I..\src\USMART -I..\..\..\Libraries\CMSIS\Include -I..\src\ff11a\src -I..\src\ff11a\src\option -I..\src\HARDWARE\LED -I..\src\HARDWARE\OLED -I..\src\ff11a\src -I..\src\ff11a\src\option -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32L1xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_MD -DUSE_STM32L152_EVAL ..\src\HARDWARE\BMP\myiic.c]
                          THUMB

                          AREA ||i.IIC_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Ack PROC
;;;117    //����ACKӦ��
;;;118    void IIC_Ack(void)
000000  b570              PUSH     {r4-r6,lr}
;;;119    {
;;;120    	IIC_SCL=0;
000002  4c09              LDR      r4,|L1.40|
000004  2500              MOVS     r5,#0
000006  f8c452a4          STR      r5,[r4,#0x2a4]
00000a  f5047428          ADD      r4,r4,#0x2a0
;;;121    	SDA_OUT();
00000e  f7fffffe          BL       SDA_OUT
;;;122    	IIC_SDA=0;
000012  6025              STR      r5,[r4,#0]
;;;123    	delay_us(5);
000014  2005              MOVS     r0,#5
000016  f7fffffe          BL       delay_us
;;;124    	IIC_SCL=1;
00001a  2001              MOVS     r0,#1
00001c  6060              STR      r0,[r4,#4]
;;;125    	delay_us(5);
00001e  2005              MOVS     r0,#5
000020  f7fffffe          BL       delay_us
;;;126    	IIC_SCL=0;
000024  6065              STR      r5,[r4,#4]
;;;127    }
000026  bd70              POP      {r4-r6,pc}
;;;128    //������ACKӦ��		    
                          ENDP

                  |L1.40|
                          DCD      0x42408000

                          AREA ||i.IIC_Init||, CODE, READONLY, ALIGN=2

                  IIC_Init PROC
;;;16     //��ʼ��IIC
;;;17     void IIC_Init(void)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;18     {					     
;;;19     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;20     
;;;21     	//RCC->APB2ENR|=1<<4;//��ʹ������IO PORTCʱ�� 							 
;;;22     	//	GPIOC->CRH&=0XFFF00FFF;//PC11/12 �������
;;;23     	//	GPIOC->CRH|=0X00033000;	   
;;;24     	//	GPIOC->ODR|=3<<11;     //PC11,12 �����
;;;25     	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB,ENABLE);
000004  2101              MOVS     r1,#1
000006  2002              MOVS     r0,#2
000008  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;26     
;;;27     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;				 //SDA-->PC.4 �˿�����
;;;28     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT; 		 //�������
00000c  2601              MOVS     r6,#1
00000e  f88d6004          STRB     r6,[sp,#4]
;;;29     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP; 		 //�������
000012  2400              MOVS     r4,#0
000014  f88d4006          STRB     r4,[sp,#6]
;;;30     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
000018  2703              MOVS     r7,#3
;;;31     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
;;;32     	GPIO_Init(GPIOB, &GPIO_InitStructure);
00001a  f8df8048          LDR      r8,|L2.100|
00001e  f44f7580          MOV      r5,#0x100             ;27
000022  f88d7005          STRB     r7,[sp,#5]            ;30
000026  9500              STR      r5,[sp,#0]            ;28
000028  f88d4007          STRB     r4,[sp,#7]            ;31
00002c  4669              MOV      r1,sp
00002e  4640              MOV      r0,r8
000030  f7fffffe          BL       GPIO_Init
;;;33     	GPIO_SetBits(GPIOB,GPIO_Pin_8);						 //PA.8 �����
000034  4629              MOV      r1,r5
000036  4640              MOV      r0,r8
000038  f7fffffe          BL       GPIO_SetBits
;;;34     
;;;35     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;	    		 //LED1-->PD.2 �˿�����
;;;36     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT; 		 //�������
00003c  f88d6004          STRB     r6,[sp,#4]
;;;37     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP; 		 //�������
000040  f88d4006          STRB     r4,[sp,#6]
000044  006d              LSLS     r5,r5,#1              ;35
;;;38     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
000046  f88d7005          STRB     r7,[sp,#5]
00004a  9500              STR      r5,[sp,#0]            ;36
;;;39     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
00004c  f88d4007          STRB     r4,[sp,#7]
;;;40     	GPIO_Init(GPIOB, &GPIO_InitStructure);	
000050  4669              MOV      r1,sp
000052  4640              MOV      r0,r8
000054  f7fffffe          BL       GPIO_Init
;;;41     	GPIO_SetBits(GPIOB,GPIO_Pin_9); 						 //PD.2 ����� 
000058  4629              MOV      r1,r5
00005a  4640              MOV      r0,r8
00005c  f7fffffe          BL       GPIO_SetBits
;;;42     
;;;43     //	GPIOC->CRL&=0XFF0FFF0F;//PC4/5 �������
;;;44     //	GPIOC->CRL|=0X00300030;	   
;;;45     //	GPIOC->ODR|=1<<5;     //PC4,4 �����
;;;46     //	GPIOC->ODR|=1<<1;     //PC4,4 �����
;;;47     }
000060  e8bd81fc          POP      {r2-r8,pc}
;;;48     //����IIC��ʼ�ź�
                          ENDP

                  |L2.100|
                          DCD      0x40020400

                          AREA ||i.IIC_NAck||, CODE, READONLY, ALIGN=2

                  IIC_NAck PROC
;;;128    //������ACKӦ��		    
;;;129    void IIC_NAck(void)
000000  b570              PUSH     {r4-r6,lr}
;;;130    {
;;;131    	IIC_SCL=0;
000002  4c09              LDR      r4,|L3.40|
000004  2500              MOVS     r5,#0
000006  f8c452a4          STR      r5,[r4,#0x2a4]
00000a  f5047428          ADD      r4,r4,#0x2a0
;;;132    	SDA_OUT();
00000e  f7fffffe          BL       SDA_OUT
;;;133    	IIC_SDA=1;
000012  2601              MOVS     r6,#1
000014  6026              STR      r6,[r4,#0]
;;;134    	delay_us(2);
000016  2002              MOVS     r0,#2
000018  f7fffffe          BL       delay_us
;;;135    	IIC_SCL=1;
00001c  6066              STR      r6,[r4,#4]
;;;136    	delay_us(2);
00001e  2002              MOVS     r0,#2
000020  f7fffffe          BL       delay_us
;;;137    	IIC_SCL=0;
000024  6065              STR      r5,[r4,#4]
;;;138    }					 				     
000026  bd70              POP      {r4-r6,pc}
;;;139    //IIC����һ���ֽ�
                          ENDP

                  |L3.40|
                          DCD      0x42408000

                          AREA ||i.IIC_Read_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Read_Byte PROC
;;;159    //��1���ֽڣ�ack=1ʱ������ACK��ack=0������nACK   
;;;160    u8 IIC_Read_Byte(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;161    {
;;;162    	unsigned char i,receive=0;
000004  2400              MOVS     r4,#0
;;;163    	SDA_OUT();//SDA����Ϊ����
000006  f7fffffe          BL       SDA_OUT
;;;164    	IIC_SDA = 1;
00000a  4d10              LDR      r5,|L4.76|
00000c  2701              MOVS     r7,#1
00000e  f8c572a0          STR      r7,[r5,#0x2a0]
;;;165        for(i=0;i<8;i++ )
000012  2600              MOVS     r6,#0
000014  46b0              MOV      r8,r6
                  |L4.22|
;;;166    	{
;;;167            receive<<=1;
000016  0660              LSLS     r0,r4,#25
000018  0e04              LSRS     r4,r0,#24
;;;168    		IIC_SCL=1;
00001a  f8c572a4          STR      r7,[r5,#0x2a4]
;;;169            delay_us(5);
00001e  2005              MOVS     r0,#5
000020  f7fffffe          BL       delay_us
;;;170    	    SDA_IN();//SDA����Ϊ����
000024  f7fffffe          BL       SDA_IN
;;;171            if(READ_SDA)receive++;   
000028  f8d50220          LDR      r0,[r5,#0x220]
00002c  b108              CBZ      r0,|L4.50|
00002e  1c64              ADDS     r4,r4,#1
000030  b2e4              UXTB     r4,r4
                  |L4.50|
;;;172            IIC_SCL=0; 
000032  f8c582a4          STR      r8,[r5,#0x2a4]
;;;173            delay_us(5);
000036  2005              MOVS     r0,#5
000038  f7fffffe          BL       delay_us
00003c  1c76              ADDS     r6,r6,#1
00003e  b2f6              UXTB     r6,r6                 ;165
000040  2e08              CMP      r6,#8                 ;165
000042  d3e8              BCC      |L4.22|
;;;174        }
;;;175    	#if 0
;;;176        if (!ack)
;;;177            IIC_NAck();//����nACK
;;;178        else
;;;179            IIC_Ack(); //����ACK   
;;;180    	#endif
;;;181        return receive;
000044  4620              MOV      r0,r4
;;;182    }
000046  e8bd81f0          POP      {r4-r8,pc}
;;;183    
                          ENDP

00004a  0000              DCW      0x0000
                  |L4.76|
                          DCD      0x42408000

                          AREA ||i.IIC_Send_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Send_Byte PROC
;;;142    //0����Ӧ��			  
;;;143    void IIC_Send_Byte(u8 txd)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;144    {                        
000004  4606              MOV      r6,r0
;;;145        u8 t;   
;;;146    	SDA_OUT(); 	    
000006  f7fffffe          BL       SDA_OUT
;;;147        IIC_SCL=0;//����ʱ�ӿ�ʼ���ݴ���
00000a  4c0f              LDR      r4,|L5.72|
00000c  2700              MOVS     r7,#0
00000e  f8c472a4          STR      r7,[r4,#0x2a4]
;;;148        for(t=0;t<8;t++)
000012  463d              MOV      r5,r7
;;;149        {              
;;;150            IIC_SDA=(txd&0x80)>>7;
;;;151            txd<<=1; 	  
;;;152    		delay_us(2);   //��TEA5767��������ʱ���Ǳ����
;;;153    		IIC_SCL=1;
000014  f04f0801          MOV      r8,#1
                  |L5.24|
000018  09f0              LSRS     r0,r6,#7              ;150
00001a  f8c402a0          STR      r0,[r4,#0x2a0]        ;150
00001e  0670              LSLS     r0,r6,#25             ;151
000020  0e06              LSRS     r6,r0,#24             ;151
000022  2002              MOVS     r0,#2                 ;152
000024  f7fffffe          BL       delay_us
000028  f8c482a4          STR      r8,[r4,#0x2a4]
;;;154    		delay_us(5); 
00002c  2005              MOVS     r0,#5
00002e  f7fffffe          BL       delay_us
;;;155    		IIC_SCL=0;	
000032  f8c472a4          STR      r7,[r4,#0x2a4]
;;;156    		delay_us(5);
000036  2005              MOVS     r0,#5
000038  f7fffffe          BL       delay_us
00003c  1c6d              ADDS     r5,r5,#1
00003e  b2ed              UXTB     r5,r5                 ;148
000040  2d08              CMP      r5,#8                 ;148
000042  d3e9              BCC      |L5.24|
;;;157        }	 
;;;158    } 	    
000044  e8bd81f0          POP      {r4-r8,pc}
;;;159    //��1���ֽڣ�ack=1ʱ������ACK��ack=0������nACK   
                          ENDP

                  |L5.72|
                          DCD      0x42408000

                          AREA ||i.IIC_Start||, CODE, READONLY, ALIGN=2

                  IIC_Start PROC
;;;73     
;;;74     void IIC_Start(void)
000000  b570              PUSH     {r4-r6,lr}
;;;75     {
;;;76     	SDA_OUT();     //sda�����
000002  f7fffffe          BL       SDA_OUT
;;;77     	IIC_SDA=1;	  	  
000006  4c09              LDR      r4,|L6.44|
000008  2001              MOVS     r0,#1
00000a  f8c402a0          STR      r0,[r4,#0x2a0]
;;;78     	IIC_SCL=1;
00000e  f8c402a4          STR      r0,[r4,#0x2a4]
;;;79     	delay_us(5);
000012  2005              MOVS     r0,#5
000014  f5047428          ADD      r4,r4,#0x2a0
000018  f7fffffe          BL       delay_us
;;;80      	IIC_SDA=0;//START:when CLK is high,DATA change form high to low 
00001c  2500              MOVS     r5,#0
00001e  6025              STR      r5,[r4,#0]
;;;81     	delay_us(5);
000020  2005              MOVS     r0,#5
000022  f7fffffe          BL       delay_us
;;;82     	IIC_SCL=0;//ǯסI2C���ߣ�׼�����ͻ�������� 
000026  6065              STR      r5,[r4,#4]
;;;83     }	  
000028  bd70              POP      {r4-r6,pc}
;;;84     //����IICֹͣ�ź�
                          ENDP

00002a  0000              DCW      0x0000
                  |L6.44|
                          DCD      0x42408000

                          AREA ||i.IIC_Stop||, CODE, READONLY, ALIGN=2

                  IIC_Stop PROC
;;;84     //����IICֹͣ�ź�
;;;85     void IIC_Stop(void)
000000  b570              PUSH     {r4-r6,lr}
;;;86     {
;;;87     	SDA_OUT();//sda�����
000002  f7fffffe          BL       SDA_OUT
;;;88     	//IIC_SCL=0;
;;;89     	IIC_SDA=0;//STOP:when CLK is high DATA change form low to high
000006  4c09              LDR      r4,|L7.44|
000008  2000              MOVS     r0,#0
00000a  f8c402a0          STR      r0,[r4,#0x2a0]
;;;90      	//delay_us(5);
;;;91     	IIC_SCL=1; 
00000e  2501              MOVS     r5,#1
000010  f8c452a4          STR      r5,[r4,#0x2a4]
;;;92     	delay_us(5);
000014  2005              MOVS     r0,#5
000016  f5047428          ADD      r4,r4,#0x2a0
00001a  f7fffffe          BL       delay_us
;;;93     	IIC_SDA=1;//����I2C���߽����ź�
00001e  6025              STR      r5,[r4,#0]
;;;94     	delay_us(5);							   	
000020  e8bd4070          POP      {r4-r6,lr}
000024  2005              MOVS     r0,#5
000026  f7ffbffe          B.W      delay_us
;;;95     }
;;;96     //�ȴ�Ӧ���źŵ���
                          ENDP

00002a  0000              DCW      0x0000
                  |L7.44|
                          DCD      0x42408000

                          AREA ||i.IIC_Wait_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Wait_Ack PROC
;;;98     //        0������Ӧ��ɹ�
;;;99     u8 IIC_Wait_Ack(void)
000000  b570              PUSH     {r4-r6,lr}
;;;100    {
;;;101    	u8 ucErrTime=0;
000002  2400              MOVS     r4,#0
;;;102    	SDA_IN();      //SDA����Ϊ����  
000004  f7fffffe          BL       SDA_IN
;;;103    	IIC_SDA=1;delay_us(5);	   
000008  4d0d              LDR      r5,|L8.64|
00000a  2601              MOVS     r6,#1
00000c  f8c562a0          STR      r6,[r5,#0x2a0]
000010  2005              MOVS     r0,#5
000012  f7fffffe          BL       delay_us
;;;104    	IIC_SCL=1;delay_us(5);	 
000016  f8c562a4          STR      r6,[r5,#0x2a4]
00001a  2005              MOVS     r0,#5
00001c  f7fffffe          BL       delay_us
;;;105    	while(READ_SDA)
000020  e007              B        |L8.50|
                  |L8.34|
000022  1c64              ADDS     r4,r4,#1
;;;106    	{
;;;107    		ucErrTime++;
000024  b2e4              UXTB     r4,r4
;;;108    		if(ucErrTime>250)
000026  2cfa              CMP      r4,#0xfa
000028  d903              BLS      |L8.50|
;;;109    		{
;;;110    			IIC_Stop();
00002a  f7fffffe          BL       IIC_Stop
;;;111    			return 1;
00002e  2001              MOVS     r0,#1
;;;112    		}
;;;113    	}
;;;114    	IIC_SCL=0;//ʱ�����0 	   
;;;115    	return 0;  
;;;116    } 
000030  bd70              POP      {r4-r6,pc}
                  |L8.50|
000032  f8d50220          LDR      r0,[r5,#0x220]        ;105
000036  2800              CMP      r0,#0                 ;105
000038  d1f3              BNE      |L8.34|
00003a  f8c502a4          STR      r0,[r5,#0x2a4]        ;114
00003e  bd70              POP      {r4-r6,pc}
;;;117    //����ACKӦ��
                          ENDP

                  |L8.64|
                          DCD      0x42408000

                          AREA ||i.SDA_IN||, CODE, READONLY, ALIGN=2

                  SDA_IN PROC
;;;51     //IO��������
;;;52     void SDA_IN(void) 
000000  b51c              PUSH     {r2-r4,lr}
;;;53     {
;;;54     	//GPIOC->MODE&=0XFFFFFF0F;GPIOC->CRL|=2<<4;
;;;55     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;56     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;				 //SDA-->PC.4 �˿�����
000002  f44f7080          MOV      r0,#0x100
;;;57     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN; 		 //�������
000006  9000              STR      r0,[sp,#0]
000008  2000              MOVS     r0,#0
00000a  f88d0004          STRB     r0,[sp,#4]
;;;58     	// GPIO_InitStructure.GPIO_OType = GPIO_OType_PP; 		 //�������
;;;59     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
00000e  2103              MOVS     r1,#3
000010  f88d1005          STRB     r1,[sp,#5]
;;;60     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000014  f88d0007          STRB     r0,[sp,#7]
;;;61     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000018  4669              MOV      r1,sp
00001a  4802              LDR      r0,|L9.36|
00001c  f7fffffe          BL       GPIO_Init
;;;62     }
000020  bd1c              POP      {r2-r4,pc}
;;;63     void SDA_OUT(void) 
                          ENDP

000022  0000              DCW      0x0000
                  |L9.36|
                          DCD      0x40020400

                          AREA ||i.SDA_OUT||, CODE, READONLY, ALIGN=2

                  SDA_OUT PROC
;;;62     }
;;;63     void SDA_OUT(void) 
000000  b51c              PUSH     {r2-r4,lr}
;;;64     {
;;;65     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;66     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;				 //SDA-->PC.4 �˿�����
000002  f44f7080          MOV      r0,#0x100
;;;67     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT; 		 //�������
000006  9000              STR      r0,[sp,#0]
000008  2001              MOVS     r0,#1
00000a  f88d0004          STRB     r0,[sp,#4]
;;;68     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP; 		 //�������
00000e  2000              MOVS     r0,#0
000010  f88d0006          STRB     r0,[sp,#6]
;;;69     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
000014  2103              MOVS     r1,#3
000016  f88d1005          STRB     r1,[sp,#5]
;;;70     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
00001a  f88d0007          STRB     r0,[sp,#7]
;;;71     	GPIO_Init(GPIOB, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  4801              LDR      r0,|L10.40|
000022  f7fffffe          BL       GPIO_Init
;;;72     }
000026  bd1c              POP      {r2-r4,pc}
;;;73     
                          ENDP

                  |L10.40|
                          DCD      0x40020400

;*** Start embedded assembler ***

#line 1 "..\\src\\HARDWARE\\BMP\\myiic.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_myiic_c_IIC_Init____REV16|
#line 114 "..\\..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_myiic_c_IIC_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_myiic_c_IIC_Init____REVSH|
#line 128
|__asm___7_myiic_c_IIC_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
